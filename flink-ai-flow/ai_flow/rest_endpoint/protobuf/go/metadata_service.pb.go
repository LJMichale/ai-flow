//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metadata_service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	//_ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{0}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameRequest) Reset()         { *m = NameRequest{} }
func (m *NameRequest) String() string { return proto.CompactTextString(m) }
func (*NameRequest) ProtoMessage()    {}
func (*NameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{1}
}

func (m *NameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameRequest.Unmarshal(m, b)
}
func (m *NameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameRequest.Marshal(b, m, deterministic)
}
func (m *NameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameRequest.Merge(m, src)
}
func (m *NameRequest) XXX_Size() int {
	return xxx_messageInfo_NameRequest.Size(m)
}
func (m *NameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NameRequest proto.InternalMessageInfo

func (m *NameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListRequest struct {
	PageSize             int64    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{2}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type MetaResponse struct {
	ReturnCode           string   `protobuf:"bytes,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg            string   `protobuf:"bytes,2,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaResponse) Reset()         { *m = MetaResponse{} }
func (m *MetaResponse) String() string { return proto.CompactTextString(m) }
func (*MetaResponse) ProtoMessage()    {}
func (*MetaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{3}
}

func (m *MetaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaResponse.Unmarshal(m, b)
}
func (m *MetaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaResponse.Marshal(b, m, deterministic)
}
func (m *MetaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaResponse.Merge(m, src)
}
func (m *MetaResponse) XXX_Size() int {
	return xxx_messageInfo_MetaResponse.Size(m)
}
func (m *MetaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaResponse proto.InternalMessageInfo

func (m *MetaResponse) GetReturnCode() string {
	if m != nil {
		return m.ReturnCode
	}
	return ""
}

func (m *MetaResponse) GetReturnMsg() string {
	if m != nil {
		return m.ReturnMsg
	}
	return ""
}

func (m *MetaResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

//example
type RegisterExampleRequest struct {
	Example              *ExampleProto `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegisterExampleRequest) Reset()         { *m = RegisterExampleRequest{} }
func (m *RegisterExampleRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterExampleRequest) ProtoMessage()    {}
func (*RegisterExampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{4}
}

func (m *RegisterExampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterExampleRequest.Unmarshal(m, b)
}
func (m *RegisterExampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterExampleRequest.Marshal(b, m, deterministic)
}
func (m *RegisterExampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterExampleRequest.Merge(m, src)
}
func (m *RegisterExampleRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterExampleRequest.Size(m)
}
func (m *RegisterExampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterExampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterExampleRequest proto.InternalMessageInfo

func (m *RegisterExampleRequest) GetExample() *ExampleProto {
	if m != nil {
		return m.Example
	}
	return nil
}

type RegisterExamplesRequest struct {
	Examples             []*ExampleProto `protobuf:"bytes,1,rep,name=examples,proto3" json:"examples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RegisterExamplesRequest) Reset()         { *m = RegisterExamplesRequest{} }
func (m *RegisterExamplesRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterExamplesRequest) ProtoMessage()    {}
func (*RegisterExamplesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{5}
}

func (m *RegisterExamplesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterExamplesRequest.Unmarshal(m, b)
}
func (m *RegisterExamplesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterExamplesRequest.Marshal(b, m, deterministic)
}
func (m *RegisterExamplesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterExamplesRequest.Merge(m, src)
}
func (m *RegisterExamplesRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterExamplesRequest.Size(m)
}
func (m *RegisterExamplesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterExamplesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterExamplesRequest proto.InternalMessageInfo

func (m *RegisterExamplesRequest) GetExamples() []*ExampleProto {
	if m != nil {
		return m.Examples
	}
	return nil
}

type ExampleListProto struct {
	Examples             []*ExampleProto `protobuf:"bytes,1,rep,name=examples,proto3" json:"examples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExampleListProto) Reset()         { *m = ExampleListProto{} }
func (m *ExampleListProto) String() string { return proto.CompactTextString(m) }
func (*ExampleListProto) ProtoMessage()    {}
func (*ExampleListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{6}
}

func (m *ExampleListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleListProto.Unmarshal(m, b)
}
func (m *ExampleListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleListProto.Marshal(b, m, deterministic)
}
func (m *ExampleListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleListProto.Merge(m, src)
}
func (m *ExampleListProto) XXX_Size() int {
	return xxx_messageInfo_ExampleListProto.Size(m)
}
func (m *ExampleListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleListProto proto.InternalMessageInfo

func (m *ExampleListProto) GetExamples() []*ExampleProto {
	if m != nil {
		return m.Examples
	}
	return nil
}

type UpdateExampleRequest struct {
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Properties           map[string]string       `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SupportType          ExampleSupportTypeProto `protobuf:"varint,3,opt,name=support_type,json=supportType,proto3,enum=service.ExampleSupportTypeProto" json:"support_type,omitempty"`
	NameList             []string                `protobuf:"bytes,4,rep,name=name_list,json=nameList,proto3" json:"name_list,omitempty"`
	TypeList             []DataTypeProto         `protobuf:"varint,5,rep,packed,name=type_list,json=typeList,proto3,enum=service.DataTypeProto" json:"type_list,omitempty"`
	DataType             *wrappers.StringValue   `protobuf:"bytes,6,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataFormat           *wrappers.StringValue   `protobuf:"bytes,7,opt,name=data_format,json=dataFormat,proto3" json:"data_format,omitempty"`
	BatchUri             *wrappers.StringValue   `protobuf:"bytes,8,opt,name=batch_uri,json=batchUri,proto3" json:"batch_uri,omitempty"`
	StreamUri            *wrappers.StringValue   `protobuf:"bytes,9,opt,name=stream_uri,json=streamUri,proto3" json:"stream_uri,omitempty"`
	Description          *wrappers.StringValue   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	UpdateTime           *wrappers.Int64Value    `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CatalogName          *wrappers.StringValue   `protobuf:"bytes,12,opt,name=catalog_name,json=catalogName,proto3" json:"catalog_name,omitempty"`
	CatalogType          *wrappers.StringValue   `protobuf:"bytes,13,opt,name=catalog_type,json=catalogType,proto3" json:"catalog_type,omitempty"`
	CatalogDatabase      *wrappers.StringValue   `protobuf:"bytes,14,opt,name=catalog_database,json=catalogDatabase,proto3" json:"catalog_database,omitempty"`
	CatalogConnectionUri *wrappers.StringValue   `protobuf:"bytes,15,opt,name=catalog_connection_uri,json=catalogConnectionUri,proto3" json:"catalog_connection_uri,omitempty"`
	CatalogVersion       *wrappers.StringValue   `protobuf:"bytes,16,opt,name=catalog_version,json=catalogVersion,proto3" json:"catalog_version,omitempty"`
	CatalogTable         *wrappers.StringValue   `protobuf:"bytes,17,opt,name=catalog_table,json=catalogTable,proto3" json:"catalog_table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateExampleRequest) Reset()         { *m = UpdateExampleRequest{} }
func (m *UpdateExampleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateExampleRequest) ProtoMessage()    {}
func (*UpdateExampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{7}
}

func (m *UpdateExampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExampleRequest.Unmarshal(m, b)
}
func (m *UpdateExampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExampleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateExampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExampleRequest.Merge(m, src)
}
func (m *UpdateExampleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateExampleRequest.Size(m)
}
func (m *UpdateExampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExampleRequest proto.InternalMessageInfo

func (m *UpdateExampleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateExampleRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *UpdateExampleRequest) GetSupportType() ExampleSupportTypeProto {
	if m != nil {
		return m.SupportType
	}
	return ExampleSupportTypeProto_EXAMPLE_SUPPORT_TYPE_UNSPECIFIED
}

func (m *UpdateExampleRequest) GetNameList() []string {
	if m != nil {
		return m.NameList
	}
	return nil
}

func (m *UpdateExampleRequest) GetTypeList() []DataTypeProto {
	if m != nil {
		return m.TypeList
	}
	return nil
}

func (m *UpdateExampleRequest) GetDataType() *wrappers.StringValue {
	if m != nil {
		return m.DataType
	}
	return nil
}

func (m *UpdateExampleRequest) GetDataFormat() *wrappers.StringValue {
	if m != nil {
		return m.DataFormat
	}
	return nil
}

func (m *UpdateExampleRequest) GetBatchUri() *wrappers.StringValue {
	if m != nil {
		return m.BatchUri
	}
	return nil
}

func (m *UpdateExampleRequest) GetStreamUri() *wrappers.StringValue {
	if m != nil {
		return m.StreamUri
	}
	return nil
}

func (m *UpdateExampleRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateExampleRequest) GetUpdateTime() *wrappers.Int64Value {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogName() *wrappers.StringValue {
	if m != nil {
		return m.CatalogName
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogType() *wrappers.StringValue {
	if m != nil {
		return m.CatalogType
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogDatabase() *wrappers.StringValue {
	if m != nil {
		return m.CatalogDatabase
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogConnectionUri() *wrappers.StringValue {
	if m != nil {
		return m.CatalogConnectionUri
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogVersion() *wrappers.StringValue {
	if m != nil {
		return m.CatalogVersion
	}
	return nil
}

func (m *UpdateExampleRequest) GetCatalogTable() *wrappers.StringValue {
	if m != nil {
		return m.CatalogTable
	}
	return nil
}

//model
type RegisterModelRelationRequest struct {
	ModelRelation        *ModelRelationProto `protobuf:"bytes,1,opt,name=model_relation,json=modelRelation,proto3" json:"model_relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RegisterModelRelationRequest) Reset()         { *m = RegisterModelRelationRequest{} }
func (m *RegisterModelRelationRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterModelRelationRequest) ProtoMessage()    {}
func (*RegisterModelRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{8}
}

func (m *RegisterModelRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterModelRelationRequest.Unmarshal(m, b)
}
func (m *RegisterModelRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterModelRelationRequest.Marshal(b, m, deterministic)
}
func (m *RegisterModelRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterModelRelationRequest.Merge(m, src)
}
func (m *RegisterModelRelationRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterModelRelationRequest.Size(m)
}
func (m *RegisterModelRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterModelRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterModelRelationRequest proto.InternalMessageInfo

func (m *RegisterModelRelationRequest) GetModelRelation() *ModelRelationProto {
	if m != nil {
		return m.ModelRelation
	}
	return nil
}

type RegisterModelRequest struct {
	Model                *ModelProto `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RegisterModelRequest) Reset()         { *m = RegisterModelRequest{} }
func (m *RegisterModelRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterModelRequest) ProtoMessage()    {}
func (*RegisterModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{9}
}

func (m *RegisterModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterModelRequest.Unmarshal(m, b)
}
func (m *RegisterModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterModelRequest.Marshal(b, m, deterministic)
}
func (m *RegisterModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterModelRequest.Merge(m, src)
}
func (m *RegisterModelRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterModelRequest.Size(m)
}
func (m *RegisterModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterModelRequest proto.InternalMessageInfo

func (m *RegisterModelRequest) GetModel() *ModelProto {
	if m != nil {
		return m.Model
	}
	return nil
}

type ModelRelationListProto struct {
	ModelRelations       []*ModelRelationProto `protobuf:"bytes,1,rep,name=model_relations,json=modelRelations,proto3" json:"model_relations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModelRelationListProto) Reset()         { *m = ModelRelationListProto{} }
func (m *ModelRelationListProto) String() string { return proto.CompactTextString(m) }
func (*ModelRelationListProto) ProtoMessage()    {}
func (*ModelRelationListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{10}
}

func (m *ModelRelationListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelRelationListProto.Unmarshal(m, b)
}
func (m *ModelRelationListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelRelationListProto.Marshal(b, m, deterministic)
}
func (m *ModelRelationListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelRelationListProto.Merge(m, src)
}
func (m *ModelRelationListProto) XXX_Size() int {
	return xxx_messageInfo_ModelRelationListProto.Size(m)
}
func (m *ModelRelationListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelRelationListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ModelRelationListProto proto.InternalMessageInfo

func (m *ModelRelationListProto) GetModelRelations() []*ModelRelationProto {
	if m != nil {
		return m.ModelRelations
	}
	return nil
}

//model version
type ModelVersionNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModelId              int64    `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelVersionNameRequest) Reset()         { *m = ModelVersionNameRequest{} }
func (m *ModelVersionNameRequest) String() string { return proto.CompactTextString(m) }
func (*ModelVersionNameRequest) ProtoMessage()    {}
func (*ModelVersionNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{11}
}

func (m *ModelVersionNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelVersionNameRequest.Unmarshal(m, b)
}
func (m *ModelVersionNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelVersionNameRequest.Marshal(b, m, deterministic)
}
func (m *ModelVersionNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelVersionNameRequest.Merge(m, src)
}
func (m *ModelVersionNameRequest) XXX_Size() int {
	return xxx_messageInfo_ModelVersionNameRequest.Size(m)
}
func (m *ModelVersionNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelVersionNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelVersionNameRequest proto.InternalMessageInfo

func (m *ModelVersionNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModelVersionNameRequest) GetModelId() int64 {
	if m != nil {
		return m.ModelId
	}
	return 0
}

type RegisterModelVersionRelationRequest struct {
	ModelVersionRelation *ModelVersionRelationProto `protobuf:"bytes,1,opt,name=model_version_relation,json=modelVersionRelation,proto3" json:"model_version_relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RegisterModelVersionRelationRequest) Reset()         { *m = RegisterModelVersionRelationRequest{} }
func (m *RegisterModelVersionRelationRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterModelVersionRelationRequest) ProtoMessage()    {}
func (*RegisterModelVersionRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{12}
}

func (m *RegisterModelVersionRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterModelVersionRelationRequest.Unmarshal(m, b)
}
func (m *RegisterModelVersionRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterModelVersionRelationRequest.Marshal(b, m, deterministic)
}
func (m *RegisterModelVersionRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterModelVersionRelationRequest.Merge(m, src)
}
func (m *RegisterModelVersionRelationRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterModelVersionRelationRequest.Size(m)
}
func (m *RegisterModelVersionRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterModelVersionRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterModelVersionRelationRequest proto.InternalMessageInfo

func (m *RegisterModelVersionRelationRequest) GetModelVersionRelation() *ModelVersionRelationProto {
	if m != nil {
		return m.ModelVersionRelation
	}
	return nil
}

type RegisterModelVersionRequest struct {
	ModelVersion         *ModelVersionProto `protobuf:"bytes,1,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RegisterModelVersionRequest) Reset()         { *m = RegisterModelVersionRequest{} }
func (m *RegisterModelVersionRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterModelVersionRequest) ProtoMessage()    {}
func (*RegisterModelVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{13}
}

func (m *RegisterModelVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterModelVersionRequest.Unmarshal(m, b)
}
func (m *RegisterModelVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterModelVersionRequest.Marshal(b, m, deterministic)
}
func (m *RegisterModelVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterModelVersionRequest.Merge(m, src)
}
func (m *RegisterModelVersionRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterModelVersionRequest.Size(m)
}
func (m *RegisterModelVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterModelVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterModelVersionRequest proto.InternalMessageInfo

func (m *RegisterModelVersionRequest) GetModelVersion() *ModelVersionProto {
	if m != nil {
		return m.ModelVersion
	}
	return nil
}

type ListModelVersionRelationRequest struct {
	ModelId              int64    `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListModelVersionRelationRequest) Reset()         { *m = ListModelVersionRelationRequest{} }
func (m *ListModelVersionRelationRequest) String() string { return proto.CompactTextString(m) }
func (*ListModelVersionRelationRequest) ProtoMessage()    {}
func (*ListModelVersionRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{14}
}

func (m *ListModelVersionRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListModelVersionRelationRequest.Unmarshal(m, b)
}
func (m *ListModelVersionRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListModelVersionRelationRequest.Marshal(b, m, deterministic)
}
func (m *ListModelVersionRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListModelVersionRelationRequest.Merge(m, src)
}
func (m *ListModelVersionRelationRequest) XXX_Size() int {
	return xxx_messageInfo_ListModelVersionRelationRequest.Size(m)
}
func (m *ListModelVersionRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListModelVersionRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListModelVersionRelationRequest proto.InternalMessageInfo

func (m *ListModelVersionRelationRequest) GetModelId() int64 {
	if m != nil {
		return m.ModelId
	}
	return 0
}

func (m *ListModelVersionRelationRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListModelVersionRelationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ModelVersionRelationListProto struct {
	ModelVersions        []*ModelVersionRelationProto `protobuf:"bytes,1,rep,name=model_versions,json=modelVersions,proto3" json:"model_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ModelVersionRelationListProto) Reset()         { *m = ModelVersionRelationListProto{} }
func (m *ModelVersionRelationListProto) String() string { return proto.CompactTextString(m) }
func (*ModelVersionRelationListProto) ProtoMessage()    {}
func (*ModelVersionRelationListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{15}
}

func (m *ModelVersionRelationListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelVersionRelationListProto.Unmarshal(m, b)
}
func (m *ModelVersionRelationListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelVersionRelationListProto.Marshal(b, m, deterministic)
}
func (m *ModelVersionRelationListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelVersionRelationListProto.Merge(m, src)
}
func (m *ModelVersionRelationListProto) XXX_Size() int {
	return xxx_messageInfo_ModelVersionRelationListProto.Size(m)
}
func (m *ModelVersionRelationListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelVersionRelationListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ModelVersionRelationListProto proto.InternalMessageInfo

func (m *ModelVersionRelationListProto) GetModelVersions() []*ModelVersionRelationProto {
	if m != nil {
		return m.ModelVersions
	}
	return nil
}

type ModelVersionListProto struct {
	ModelVersions        []*ModelVersionProto `protobuf:"bytes,1,rep,name=model_versions,json=modelVersions,proto3" json:"model_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ModelVersionListProto) Reset()         { *m = ModelVersionListProto{} }
func (m *ModelVersionListProto) String() string { return proto.CompactTextString(m) }
func (*ModelVersionListProto) ProtoMessage()    {}
func (*ModelVersionListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{16}
}

func (m *ModelVersionListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelVersionListProto.Unmarshal(m, b)
}
func (m *ModelVersionListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelVersionListProto.Marshal(b, m, deterministic)
}
func (m *ModelVersionListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelVersionListProto.Merge(m, src)
}
func (m *ModelVersionListProto) XXX_Size() int {
	return xxx_messageInfo_ModelVersionListProto.Size(m)
}
func (m *ModelVersionListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelVersionListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ModelVersionListProto proto.InternalMessageInfo

func (m *ModelVersionListProto) GetModelVersions() []*ModelVersionProto {
	if m != nil {
		return m.ModelVersions
	}
	return nil
}

type ModelNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelNameRequest) Reset()         { *m = ModelNameRequest{} }
func (m *ModelNameRequest) String() string { return proto.CompactTextString(m) }
func (*ModelNameRequest) ProtoMessage()    {}
func (*ModelNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{17}
}

func (m *ModelNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelNameRequest.Unmarshal(m, b)
}
func (m *ModelNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelNameRequest.Marshal(b, m, deterministic)
}
func (m *ModelNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelNameRequest.Merge(m, src)
}
func (m *ModelNameRequest) XXX_Size() int {
	return xxx_messageInfo_ModelNameRequest.Size(m)
}
func (m *ModelNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelNameRequest proto.InternalMessageInfo

func (m *ModelNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//job
type RegisterJobRequest struct {
	Job                  *JobProto `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterJobRequest) Reset()         { *m = RegisterJobRequest{} }
func (m *RegisterJobRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterJobRequest) ProtoMessage()    {}
func (*RegisterJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{18}
}

func (m *RegisterJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterJobRequest.Unmarshal(m, b)
}
func (m *RegisterJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterJobRequest.Marshal(b, m, deterministic)
}
func (m *RegisterJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterJobRequest.Merge(m, src)
}
func (m *RegisterJobRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterJobRequest.Size(m)
}
func (m *RegisterJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterJobRequest proto.InternalMessageInfo

func (m *RegisterJobRequest) GetJob() *JobProto {
	if m != nil {
		return m.Job
	}
	return nil
}

type UpdateJobRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WorkflowExecutionId  *wrappers.Int64Value  `protobuf:"bytes,2,opt,name=workflow_execution_id,json=workflowExecutionId,proto3" json:"workflow_execution_id,omitempty"`
	JobState             StateProto            `protobuf:"varint,3,opt,name=job_state,json=jobState,proto3,enum=service.StateProto" json:"job_state,omitempty"`
	Properties           map[string]string     `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	JobId                *wrappers.StringValue `protobuf:"bytes,5,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	EndTime              *wrappers.Int64Value  `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LogUri               *wrappers.StringValue `protobuf:"bytes,7,opt,name=log_uri,json=logUri,proto3" json:"log_uri,omitempty"`
	Signature            *wrappers.StringValue `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateJobRequest) Reset()         { *m = UpdateJobRequest{} }
func (m *UpdateJobRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateJobRequest) ProtoMessage()    {}
func (*UpdateJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{19}
}

func (m *UpdateJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobRequest.Unmarshal(m, b)
}
func (m *UpdateJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobRequest.Marshal(b, m, deterministic)
}
func (m *UpdateJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobRequest.Merge(m, src)
}
func (m *UpdateJobRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateJobRequest.Size(m)
}
func (m *UpdateJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobRequest proto.InternalMessageInfo

func (m *UpdateJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateJobRequest) GetWorkflowExecutionId() *wrappers.Int64Value {
	if m != nil {
		return m.WorkflowExecutionId
	}
	return nil
}

func (m *UpdateJobRequest) GetJobState() StateProto {
	if m != nil {
		return m.JobState
	}
	return StateProto_STATE_UNSPECIFIED
}

func (m *UpdateJobRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *UpdateJobRequest) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *UpdateJobRequest) GetEndTime() *wrappers.Int64Value {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *UpdateJobRequest) GetLogUri() *wrappers.StringValue {
	if m != nil {
		return m.LogUri
	}
	return nil
}

func (m *UpdateJobRequest) GetSignature() *wrappers.StringValue {
	if m != nil {
		return m.Signature
	}
	return nil
}

type UpdateJobStateRequest struct {
	State                StateProto `protobuf:"varint,1,opt,name=state,proto3,enum=service.StateProto" json:"state,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateJobStateRequest) Reset()         { *m = UpdateJobStateRequest{} }
func (m *UpdateJobStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateJobStateRequest) ProtoMessage()    {}
func (*UpdateJobStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{20}
}

func (m *UpdateJobStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobStateRequest.Unmarshal(m, b)
}
func (m *UpdateJobStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateJobStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobStateRequest.Merge(m, src)
}
func (m *UpdateJobStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateJobStateRequest.Size(m)
}
func (m *UpdateJobStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobStateRequest proto.InternalMessageInfo

func (m *UpdateJobStateRequest) GetState() StateProto {
	if m != nil {
		return m.State
	}
	return StateProto_STATE_UNSPECIFIED
}

func (m *UpdateJobStateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateJobEndTimeRequest struct {
	EndTime              int64    `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateJobEndTimeRequest) Reset()         { *m = UpdateJobEndTimeRequest{} }
func (m *UpdateJobEndTimeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateJobEndTimeRequest) ProtoMessage()    {}
func (*UpdateJobEndTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{21}
}

func (m *UpdateJobEndTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobEndTimeRequest.Unmarshal(m, b)
}
func (m *UpdateJobEndTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobEndTimeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateJobEndTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobEndTimeRequest.Merge(m, src)
}
func (m *UpdateJobEndTimeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateJobEndTimeRequest.Size(m)
}
func (m *UpdateJobEndTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobEndTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobEndTimeRequest proto.InternalMessageInfo

func (m *UpdateJobEndTimeRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *UpdateJobEndTimeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type JobListProto struct {
	Jobs                 []*JobProto `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *JobListProto) Reset()         { *m = JobListProto{} }
func (m *JobListProto) String() string { return proto.CompactTextString(m) }
func (*JobListProto) ProtoMessage()    {}
func (*JobListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{22}
}

func (m *JobListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobListProto.Unmarshal(m, b)
}
func (m *JobListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobListProto.Marshal(b, m, deterministic)
}
func (m *JobListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobListProto.Merge(m, src)
}
func (m *JobListProto) XXX_Size() int {
	return xxx_messageInfo_JobListProto.Size(m)
}
func (m *JobListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_JobListProto.DiscardUnknown(m)
}

var xxx_messageInfo_JobListProto proto.InternalMessageInfo

func (m *JobListProto) GetJobs() []*JobProto {
	if m != nil {
		return m.Jobs
	}
	return nil
}

//workflow execution
type RegisterWorkFlowExecutionRequest struct {
	WorkflowExecution    *WorkflowExecutionProto `protobuf:"bytes,1,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RegisterWorkFlowExecutionRequest) Reset()         { *m = RegisterWorkFlowExecutionRequest{} }
func (m *RegisterWorkFlowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterWorkFlowExecutionRequest) ProtoMessage()    {}
func (*RegisterWorkFlowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{23}
}

func (m *RegisterWorkFlowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterWorkFlowExecutionRequest.Unmarshal(m, b)
}
func (m *RegisterWorkFlowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterWorkFlowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *RegisterWorkFlowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterWorkFlowExecutionRequest.Merge(m, src)
}
func (m *RegisterWorkFlowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterWorkFlowExecutionRequest.Size(m)
}
func (m *RegisterWorkFlowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterWorkFlowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterWorkFlowExecutionRequest proto.InternalMessageInfo

func (m *RegisterWorkFlowExecutionRequest) GetWorkflowExecution() *WorkflowExecutionProto {
	if m != nil {
		return m.WorkflowExecution
	}
	return nil
}

type UpdateWorkflowExecutionRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProjectId            *wrappers.Int64Value  `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ExecutionState       StateProto            `protobuf:"varint,4,opt,name=execution_state,json=executionState,proto3,enum=service.StateProto" json:"execution_state,omitempty"`
	Properties           map[string]string     `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EndTime              *wrappers.Int64Value  `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LogUri               *wrappers.StringValue `protobuf:"bytes,7,opt,name=log_uri,json=logUri,proto3" json:"log_uri,omitempty"`
	WorkflowJson         *wrappers.StringValue `protobuf:"bytes,8,opt,name=workflow_json,json=workflowJson,proto3" json:"workflow_json,omitempty"`
	Signature            *wrappers.StringValue `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateWorkflowExecutionRequest) Reset()         { *m = UpdateWorkflowExecutionRequest{} }
func (m *UpdateWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowExecutionRequest) ProtoMessage()    {}
func (*UpdateWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{24}
}

func (m *UpdateWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowExecutionRequest.Merge(m, src)
}
func (m *UpdateWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowExecutionRequest.Size(m)
}
func (m *UpdateWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowExecutionRequest proto.InternalMessageInfo

func (m *UpdateWorkflowExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateWorkflowExecutionRequest) GetProjectId() *wrappers.Int64Value {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *UpdateWorkflowExecutionRequest) GetExecutionState() StateProto {
	if m != nil {
		return m.ExecutionState
	}
	return StateProto_STATE_UNSPECIFIED
}

func (m *UpdateWorkflowExecutionRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *UpdateWorkflowExecutionRequest) GetEndTime() *wrappers.Int64Value {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *UpdateWorkflowExecutionRequest) GetLogUri() *wrappers.StringValue {
	if m != nil {
		return m.LogUri
	}
	return nil
}

func (m *UpdateWorkflowExecutionRequest) GetWorkflowJson() *wrappers.StringValue {
	if m != nil {
		return m.WorkflowJson
	}
	return nil
}

func (m *UpdateWorkflowExecutionRequest) GetSignature() *wrappers.StringValue {
	if m != nil {
		return m.Signature
	}
	return nil
}

type WorkFlowExecutionListProto struct {
	WorkflowExecutions   []*WorkflowExecutionProto `protobuf:"bytes,1,rep,name=workflow_executions,json=workflowExecutions,proto3" json:"workflow_executions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *WorkFlowExecutionListProto) Reset()         { *m = WorkFlowExecutionListProto{} }
func (m *WorkFlowExecutionListProto) String() string { return proto.CompactTextString(m) }
func (*WorkFlowExecutionListProto) ProtoMessage()    {}
func (*WorkFlowExecutionListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{25}
}

func (m *WorkFlowExecutionListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkFlowExecutionListProto.Unmarshal(m, b)
}
func (m *WorkFlowExecutionListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkFlowExecutionListProto.Marshal(b, m, deterministic)
}
func (m *WorkFlowExecutionListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkFlowExecutionListProto.Merge(m, src)
}
func (m *WorkFlowExecutionListProto) XXX_Size() int {
	return xxx_messageInfo_WorkFlowExecutionListProto.Size(m)
}
func (m *WorkFlowExecutionListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkFlowExecutionListProto.DiscardUnknown(m)
}

var xxx_messageInfo_WorkFlowExecutionListProto proto.InternalMessageInfo

func (m *WorkFlowExecutionListProto) GetWorkflowExecutions() []*WorkflowExecutionProto {
	if m != nil {
		return m.WorkflowExecutions
	}
	return nil
}

type UpdateWorkflowExecutionEndTimeRequest struct {
	EndTime              int64    `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWorkflowExecutionEndTimeRequest) Reset()         { *m = UpdateWorkflowExecutionEndTimeRequest{} }
func (m *UpdateWorkflowExecutionEndTimeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowExecutionEndTimeRequest) ProtoMessage()    {}
func (*UpdateWorkflowExecutionEndTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{26}
}

func (m *UpdateWorkflowExecutionEndTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowExecutionEndTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowExecutionEndTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest.Merge(m, src)
}
func (m *UpdateWorkflowExecutionEndTimeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest.Size(m)
}
func (m *UpdateWorkflowExecutionEndTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowExecutionEndTimeRequest proto.InternalMessageInfo

func (m *UpdateWorkflowExecutionEndTimeRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *UpdateWorkflowExecutionEndTimeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateWorkflowExecutionStateRequest struct {
	State                StateProto `protobuf:"varint,1,opt,name=state,proto3,enum=service.StateProto" json:"state,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateWorkflowExecutionStateRequest) Reset()         { *m = UpdateWorkflowExecutionStateRequest{} }
func (m *UpdateWorkflowExecutionStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowExecutionStateRequest) ProtoMessage()    {}
func (*UpdateWorkflowExecutionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{27}
}

func (m *UpdateWorkflowExecutionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowExecutionStateRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowExecutionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowExecutionStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowExecutionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowExecutionStateRequest.Merge(m, src)
}
func (m *UpdateWorkflowExecutionStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowExecutionStateRequest.Size(m)
}
func (m *UpdateWorkflowExecutionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowExecutionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowExecutionStateRequest proto.InternalMessageInfo

func (m *UpdateWorkflowExecutionStateRequest) GetState() StateProto {
	if m != nil {
		return m.State
	}
	return StateProto_STATE_UNSPECIFIED
}

func (m *UpdateWorkflowExecutionStateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//project
type RegisterProjectRequest struct {
	Project              *ProjectProto `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegisterProjectRequest) Reset()         { *m = RegisterProjectRequest{} }
func (m *RegisterProjectRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterProjectRequest) ProtoMessage()    {}
func (*RegisterProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{28}
}

func (m *RegisterProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterProjectRequest.Unmarshal(m, b)
}
func (m *RegisterProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterProjectRequest.Marshal(b, m, deterministic)
}
func (m *RegisterProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterProjectRequest.Merge(m, src)
}
func (m *RegisterProjectRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterProjectRequest.Size(m)
}
func (m *RegisterProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterProjectRequest proto.InternalMessageInfo

func (m *RegisterProjectRequest) GetProject() *ProjectProto {
	if m != nil {
		return m.Project
	}
	return nil
}

type UpdateProjectRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Properties           map[string]string     `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProjectType          *wrappers.StringValue `protobuf:"bytes,3,opt,name=project_type,json=projectType,proto3" json:"project_type,omitempty"`
	Uri                  *wrappers.StringValue `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	User                 *wrappers.StringValue `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Password             *wrappers.StringValue `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{29}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *UpdateProjectRequest) GetProjectType() *wrappers.StringValue {
	if m != nil {
		return m.ProjectType
	}
	return nil
}

func (m *UpdateProjectRequest) GetUri() *wrappers.StringValue {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *UpdateProjectRequest) GetUser() *wrappers.StringValue {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateProjectRequest) GetPassword() *wrappers.StringValue {
	if m != nil {
		return m.Password
	}
	return nil
}

type ProjectListProto struct {
	Projects             []*ProjectProto `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProjectListProto) Reset()         { *m = ProjectListProto{} }
func (m *ProjectListProto) String() string { return proto.CompactTextString(m) }
func (*ProjectListProto) ProtoMessage()    {}
func (*ProjectListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{30}
}

func (m *ProjectListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectListProto.Unmarshal(m, b)
}
func (m *ProjectListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectListProto.Marshal(b, m, deterministic)
}
func (m *ProjectListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectListProto.Merge(m, src)
}
func (m *ProjectListProto) XXX_Size() int {
	return xxx_messageInfo_ProjectListProto.Size(m)
}
func (m *ProjectListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectListProto proto.InternalMessageInfo

func (m *ProjectListProto) GetProjects() []*ProjectProto {
	if m != nil {
		return m.Projects
	}
	return nil
}

//artifact
type RegisterArtifactRequest struct {
	Artifact             *ArtifactProto `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegisterArtifactRequest) Reset()         { *m = RegisterArtifactRequest{} }
func (m *RegisterArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterArtifactRequest) ProtoMessage()    {}
func (*RegisterArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{31}
}

func (m *RegisterArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterArtifactRequest.Unmarshal(m, b)
}
func (m *RegisterArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterArtifactRequest.Marshal(b, m, deterministic)
}
func (m *RegisterArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterArtifactRequest.Merge(m, src)
}
func (m *RegisterArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterArtifactRequest.Size(m)
}
func (m *RegisterArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterArtifactRequest proto.InternalMessageInfo

func (m *RegisterArtifactRequest) GetArtifact() *ArtifactProto {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpdateArtifactRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Properties           map[string]string     `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataFormat           *wrappers.StringValue `protobuf:"bytes,3,opt,name=data_format,json=dataFormat,proto3" json:"data_format,omitempty"`
	BatchUri             *wrappers.StringValue `protobuf:"bytes,4,opt,name=batch_uri,json=batchUri,proto3" json:"batch_uri,omitempty"`
	StreamUri            *wrappers.StringValue `protobuf:"bytes,5,opt,name=stream_uri,json=streamUri,proto3" json:"stream_uri,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	UpdateTime           *wrappers.Int64Value  `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateArtifactRequest) Reset()         { *m = UpdateArtifactRequest{} }
func (m *UpdateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactRequest) ProtoMessage()    {}
func (*UpdateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{32}
}

func (m *UpdateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactRequest.Unmarshal(m, b)
}
func (m *UpdateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactRequest.Merge(m, src)
}
func (m *UpdateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactRequest.Size(m)
}
func (m *UpdateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactRequest proto.InternalMessageInfo

func (m *UpdateArtifactRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateArtifactRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *UpdateArtifactRequest) GetDataFormat() *wrappers.StringValue {
	if m != nil {
		return m.DataFormat
	}
	return nil
}

func (m *UpdateArtifactRequest) GetBatchUri() *wrappers.StringValue {
	if m != nil {
		return m.BatchUri
	}
	return nil
}

func (m *UpdateArtifactRequest) GetStreamUri() *wrappers.StringValue {
	if m != nil {
		return m.StreamUri
	}
	return nil
}

func (m *UpdateArtifactRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateArtifactRequest) GetUpdateTime() *wrappers.Int64Value {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type ArtifactListProto struct {
	Artifacts            []*ArtifactProto `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ArtifactListProto) Reset()         { *m = ArtifactListProto{} }
func (m *ArtifactListProto) String() string { return proto.CompactTextString(m) }
func (*ArtifactListProto) ProtoMessage()    {}
func (*ArtifactListProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1212871fbd63cc6, []int{33}
}

func (m *ArtifactListProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactListProto.Unmarshal(m, b)
}
func (m *ArtifactListProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactListProto.Marshal(b, m, deterministic)
}
func (m *ArtifactListProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactListProto.Merge(m, src)
}
func (m *ArtifactListProto) XXX_Size() int {
	return xxx_messageInfo_ArtifactListProto.Size(m)
}
func (m *ArtifactListProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactListProto.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactListProto proto.InternalMessageInfo

func (m *ArtifactListProto) GetArtifacts() []*ArtifactProto {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func init() {
	proto.RegisterType((*IdRequest)(nil), "service.IdRequest")
	proto.RegisterType((*NameRequest)(nil), "service.NameRequest")
	proto.RegisterType((*ListRequest)(nil), "service.ListRequest")
	proto.RegisterType((*MetaResponse)(nil), "service.MetaResponse")
	proto.RegisterType((*RegisterExampleRequest)(nil), "service.RegisterExampleRequest")
	proto.RegisterType((*RegisterExamplesRequest)(nil), "service.RegisterExamplesRequest")
	proto.RegisterType((*ExampleListProto)(nil), "service.ExampleListProto")
	proto.RegisterType((*UpdateExampleRequest)(nil), "service.UpdateExampleRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.UpdateExampleRequest.PropertiesEntry")
	proto.RegisterType((*RegisterModelRelationRequest)(nil), "service.RegisterModelRelationRequest")
	proto.RegisterType((*RegisterModelRequest)(nil), "service.RegisterModelRequest")
	proto.RegisterType((*ModelRelationListProto)(nil), "service.ModelRelationListProto")
	proto.RegisterType((*ModelVersionNameRequest)(nil), "service.ModelVersionNameRequest")
	proto.RegisterType((*RegisterModelVersionRelationRequest)(nil), "service.RegisterModelVersionRelationRequest")
	proto.RegisterType((*RegisterModelVersionRequest)(nil), "service.RegisterModelVersionRequest")
	proto.RegisterType((*ListModelVersionRelationRequest)(nil), "service.ListModelVersionRelationRequest")
	proto.RegisterType((*ModelVersionRelationListProto)(nil), "service.ModelVersionRelationListProto")
	proto.RegisterType((*ModelVersionListProto)(nil), "service.ModelVersionListProto")
	proto.RegisterType((*ModelNameRequest)(nil), "service.ModelNameRequest")
	proto.RegisterType((*RegisterJobRequest)(nil), "service.RegisterJobRequest")
	proto.RegisterType((*UpdateJobRequest)(nil), "service.UpdateJobRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.UpdateJobRequest.PropertiesEntry")
	proto.RegisterType((*UpdateJobStateRequest)(nil), "service.UpdateJobStateRequest")
	proto.RegisterType((*UpdateJobEndTimeRequest)(nil), "service.UpdateJobEndTimeRequest")
	proto.RegisterType((*JobListProto)(nil), "service.JobListProto")
	proto.RegisterType((*RegisterWorkFlowExecutionRequest)(nil), "service.RegisterWorkFlowExecutionRequest")
	proto.RegisterType((*UpdateWorkflowExecutionRequest)(nil), "service.UpdateWorkflowExecutionRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.UpdateWorkflowExecutionRequest.PropertiesEntry")
	proto.RegisterType((*WorkFlowExecutionListProto)(nil), "service.WorkFlowExecutionListProto")
	proto.RegisterType((*UpdateWorkflowExecutionEndTimeRequest)(nil), "service.UpdateWorkflowExecutionEndTimeRequest")
	proto.RegisterType((*UpdateWorkflowExecutionStateRequest)(nil), "service.UpdateWorkflowExecutionStateRequest")
	proto.RegisterType((*RegisterProjectRequest)(nil), "service.RegisterProjectRequest")
	proto.RegisterType((*UpdateProjectRequest)(nil), "service.UpdateProjectRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.UpdateProjectRequest.PropertiesEntry")
	proto.RegisterType((*ProjectListProto)(nil), "service.ProjectListProto")
	proto.RegisterType((*RegisterArtifactRequest)(nil), "service.RegisterArtifactRequest")
	proto.RegisterType((*UpdateArtifactRequest)(nil), "service.UpdateArtifactRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.UpdateArtifactRequest.PropertiesEntry")
	proto.RegisterType((*ArtifactListProto)(nil), "service.ArtifactListProto")
}

func init() { proto.RegisterFile("metadata_service.proto", fileDescriptor_a1212871fbd63cc6) }

var fileDescriptor_a1212871fbd63cc6 = []byte{
	// 2768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x5b, 0x73, 0x13, 0xd9,
	0xf1, 0xaf, 0xb1, 0x7c, 0x53, 0xfb, 0x26, 0x1f, 0x7c, 0x11, 0x36, 0x17, 0xef, 0x61, 0x61, 0x0d,
	0x0b, 0x12, 0x98, 0xbb, 0x81, 0x3f, 0x8b, 0xc1, 0xec, 0xca, 0x7f, 0x4c, 0x88, 0x60, 0x4d, 0x2a,
	0x0f, 0xa8, 0x46, 0x9e, 0xe3, 0x61, 0x6c, 0x49, 0x23, 0x66, 0x46, 0x36, 0xa6, 0x36, 0x49, 0xd5,
	0x6e, 0x1e, 0x36, 0x95, 0x4a, 0x55, 0x52, 0xd4, 0xbe, 0x25, 0x0f, 0xc9, 0x53, 0x3e, 0x40, 0xbe,
	0x49, 0xbe, 0x42, 0x1e, 0x92, 0xa7, 0x7c, 0x85, 0xd4, 0xb9, 0xcd, 0x5d, 0x9a, 0xd1, 0x25, 0x9b,
	0x37, 0x6b, 0xa6, 0x4f, 0xff, 0xfa, 0x74, 0xff, 0xba, 0xe7, 0x9c, 0x6e, 0xc3, 0x42, 0x9d, 0x38,
	0xaa, 0xa6, 0x3a, 0x6a, 0xc5, 0x26, 0xd6, 0xa1, 0xb1, 0x4b, 0x0a, 0x4d, 0xcb, 0x74, 0x4c, 0x34,
	0x26, 0x7e, 0x2e, 0x9d, 0xd1, 0x4d, 0x53, 0xaf, 0x91, 0x22, 0x7b, 0x5c, 0x6d, 0xed, 0x15, 0x8f,
	0x2c, 0xb5, 0xd9, 0x24, 0x96, 0xcd, 0x05, 0x97, 0xa6, 0xea, 0xc4, 0xb6, 0x55, 0x5d, 0xac, 0x5b,
	0x3a, 0x25, 0xc4, 0xd5, 0xa6, 0x51, 0x54, 0x1b, 0x0d, 0xd3, 0x51, 0x1d, 0xc3, 0x6c, 0x08, 0x61,
	0xbc, 0x0c, 0xd9, 0x92, 0x56, 0x26, 0xef, 0x5a, 0xc4, 0x76, 0xd0, 0x34, 0x0c, 0x19, 0x5a, 0x5e,
	0x59, 0x51, 0x56, 0x33, 0xe5, 0x21, 0x43, 0xc3, 0x9f, 0xc0, 0xc4, 0x73, 0xb5, 0x4e, 0xe4, 0x6b,
	0x04, 0xc3, 0x0d, 0xb5, 0x4e, 0x98, 0x40, 0xb6, 0xcc, 0xfe, 0xc6, 0x1b, 0x30, 0xf1, 0xcc, 0xb0,
	0x1d, 0x29, 0xb2, 0x0c, 0xd9, 0xa6, 0xaa, 0x93, 0x8a, 0x6d, 0x7c, 0x20, 0x42, 0xd1, 0x38, 0x7d,
	0xf0, 0xd2, 0xf8, 0x40, 0xd0, 0x02, 0x8c, 0x9a, 0x7b, 0x7b, 0x36, 0x71, 0xf2, 0x43, 0xec, 0x8d,
	0xf8, 0x85, 0xab, 0x30, 0xb9, 0x4d, 0x1c, 0xb5, 0x4c, 0xec, 0xa6, 0xd9, 0xb0, 0x09, 0x3a, 0x0b,
	0x13, 0x16, 0x71, 0x5a, 0x56, 0xa3, 0xb2, 0x6b, 0x6a, 0x12, 0x0e, 0xf8, 0xa3, 0xc7, 0xa6, 0x46,
	0xd0, 0x69, 0x10, 0xbf, 0x2a, 0x75, 0x5b, 0x67, 0xca, 0xb2, 0xe5, 0x2c, 0x7f, 0xb2, 0x6d, 0xeb,
	0xd4, 0x4e, 0xea, 0xbf, 0x7c, 0x86, 0xdb, 0x49, 0xff, 0xc6, 0x25, 0x58, 0x28, 0x13, 0xdd, 0xb0,
	0x1d, 0x62, 0x6d, 0xbe, 0x57, 0xeb, 0xcd, 0x9a, 0xbb, 0xab, 0x22, 0x8c, 0x11, 0xfe, 0x84, 0x21,
	0x4d, 0xac, 0xcd, 0x17, 0xa4, 0xe3, 0x85, 0xe4, 0x0b, 0xea, 0xa9, 0xb2, 0x94, 0xc2, 0xcf, 0x60,
	0x31, 0xa4, 0xca, 0x96, 0xba, 0xae, 0xc1, 0xb8, 0x90, 0xb2, 0xf3, 0xca, 0x4a, 0xa6, 0xbd, 0x32,
	0x57, 0x0c, 0x6f, 0x42, 0x4e, 0xbc, 0xa1, 0x7e, 0x64, 0x6f, 0x7b, 0x51, 0xf3, 0xcf, 0x71, 0x98,
	0xfb, 0xba, 0xa9, 0xa9, 0x0e, 0x09, 0x6d, 0x2f, 0x26, 0x68, 0x68, 0x1b, 0xa0, 0x69, 0x99, 0x4d,
	0x62, 0x39, 0x06, 0xb1, 0xf3, 0x43, 0x0c, 0xe1, 0x8a, 0x8b, 0x10, 0xa7, 0xa6, 0xf0, 0xc2, 0x95,
	0xdf, 0x6c, 0x38, 0xd6, 0x71, 0xd9, 0xa7, 0x00, 0x3d, 0x86, 0x49, 0xbb, 0xd5, 0x6c, 0x9a, 0x96,
	0x53, 0x71, 0x8e, 0x9b, 0x84, 0xf9, 0x7d, 0x7a, 0x6d, 0x25, 0x6c, 0xf2, 0x4b, 0x2e, 0xf3, 0xea,
	0xb8, 0x29, 0xac, 0x9f, 0xb0, 0xbd, 0x27, 0x94, 0x39, 0xd4, 0xb6, 0x4a, 0xcd, 0xb0, 0x9d, 0xfc,
	0xf0, 0x4a, 0x66, 0x35, 0x5b, 0x1e, 0xa7, 0x0f, 0xa8, 0x57, 0xd0, 0x75, 0xc8, 0x52, 0xcd, 0xfc,
	0xe5, 0xc8, 0x4a, 0x66, 0x75, 0x7a, 0x6d, 0xc1, 0x55, 0xff, 0x44, 0x75, 0x54, 0x4f, 0xe9, 0x38,
	0x15, 0x64, 0x8b, 0xee, 0x42, 0x96, 0xa5, 0x11, 0xb3, 0x69, 0x94, 0x85, 0xf6, 0x54, 0x81, 0x27,
	0x43, 0x41, 0xe6, 0x4e, 0xe1, 0xa5, 0x63, 0x19, 0x0d, 0x7d, 0x47, 0xad, 0xb5, 0x48, 0x79, 0x5c,
	0x13, 0x9a, 0xd0, 0x03, 0x98, 0x60, 0x4b, 0xf7, 0x4c, 0xab, 0xae, 0x3a, 0xf9, 0xb1, 0x14, 0x8b,
	0x81, 0x2e, 0x78, 0xca, 0xe4, 0x29, 0x72, 0x55, 0x75, 0x76, 0xdf, 0x56, 0x5a, 0x96, 0x91, 0x1f,
	0x4f, 0x83, 0xcc, 0xc4, 0xbf, 0xb6, 0x0c, 0x74, 0x0f, 0xc0, 0x76, 0x2c, 0xa2, 0xd6, 0xd9, 0xda,
	0x6c, 0x8a, 0xb5, 0x59, 0x2e, 0x4f, 0x17, 0xff, 0x1f, 0x4c, 0x68, 0xc4, 0xde, 0xb5, 0x8c, 0x26,
	0x4d, 0xf1, 0x3c, 0xa4, 0x58, 0xed, 0x5f, 0x80, 0xee, 0xc3, 0x44, 0x8b, 0x05, 0xbf, 0xe2, 0x18,
	0x75, 0x92, 0x9f, 0x60, 0xeb, 0x97, 0x23, 0xeb, 0x4b, 0x0d, 0xe7, 0xd6, 0x0d, 0xb1, 0x6b, 0x2e,
	0xff, 0xca, 0xa8, 0x13, 0xf4, 0x10, 0x26, 0x77, 0x55, 0x47, 0xad, 0x99, 0x7a, 0x85, 0x31, 0x6e,
	0x32, 0x0d, 0xbc, 0x58, 0x41, 0xcb, 0x8c, 0x5f, 0x01, 0x8b, 0xd9, 0x54, 0x17, 0x0a, 0x58, 0xd8,
	0xbe, 0x84, 0x9c, 0x54, 0x40, 0xa3, 0x51, 0x55, 0x6d, 0x92, 0x9f, 0x4e, 0xa1, 0x64, 0x46, 0xac,
	0x7a, 0x22, 0x16, 0xa1, 0x32, 0x2c, 0x48, 0x45, 0xbb, 0x66, 0xa3, 0x41, 0x76, 0xa9, 0x7b, 0x58,
	0x44, 0x66, 0x52, 0xa8, 0x9b, 0x13, 0x6b, 0x1f, 0xbb, 0x4b, 0x69, 0x70, 0x36, 0x41, 0xc2, 0x54,
	0x0e, 0x89, 0x65, 0xd3, 0x00, 0xe5, 0x52, 0x28, 0x9b, 0x16, 0x8b, 0x76, 0xf8, 0x1a, 0xf4, 0x08,
	0xa6, 0x5c, 0x27, 0xa9, 0xd5, 0x1a, 0xc9, 0xcf, 0xa6, 0x50, 0x22, 0xfd, 0xfa, 0x8a, 0xae, 0x58,
	0x7a, 0x00, 0x33, 0xa1, 0x74, 0x46, 0x39, 0xc8, 0x1c, 0x90, 0x63, 0x51, 0x24, 0xe8, 0x9f, 0x68,
	0x0e, 0x46, 0x0e, 0xe9, 0x5a, 0x51, 0x5e, 0xf9, 0x8f, 0xf5, 0xa1, 0x3b, 0x0a, 0xae, 0xc2, 0x29,
	0x59, 0xff, 0xb6, 0x4d, 0x8d, 0xd4, 0xca, 0xa4, 0xc6, 0x3e, 0x29, 0xb2, 0xe2, 0x6c, 0xc0, 0x74,
	0x9d, 0x3e, 0xaf, 0x58, 0xe2, 0x85, 0xa8, 0xab, 0xcb, 0x6e, 0xc6, 0x06, 0x96, 0xf1, 0xb4, 0x9d,
	0xaa, 0xfb, 0x9f, 0xe1, 0x47, 0x30, 0x17, 0xc2, 0xe0, 0xba, 0x2f, 0xc2, 0x08, 0x13, 0x14, 0x2a,
	0x4f, 0x04, 0x55, 0x72, 0x55, 0x5c, 0x02, 0xbf, 0x81, 0x85, 0x00, 0x8e, 0x57, 0x5e, 0x9f, 0xc0,
	0x4c, 0xd0, 0x40, 0x59, 0x65, 0x3b, 0x5a, 0x38, 0x1d, 0xb0, 0xd0, 0xc6, 0x5f, 0xc1, 0x22, 0x93,
	0x12, 0x81, 0x49, 0xf8, 0x50, 0xa2, 0x93, 0x30, 0xce, 0x41, 0x0d, 0x4d, 0x7c, 0xfe, 0xc6, 0xd8,
	0xef, 0x92, 0x86, 0x7f, 0x05, 0xe7, 0x02, 0x9b, 0x15, 0x1a, 0xc3, 0x7e, 0xfd, 0x19, 0x2c, 0x70,
	0x0d, 0x82, 0x3e, 0x61, 0xff, 0xe2, 0xa0, 0xf5, 0x21, 0x2d, 0x7c, 0x13, 0x73, 0xf5, 0x98, 0x57,
	0xf8, 0x0d, 0x2c, 0xc7, 0x1b, 0xc0, 0x81, 0x1f, 0xc2, 0x54, 0x00, 0x58, 0xe0, 0x2d, 0xc5, 0xe2,
	0x71, 0x9c, 0x49, 0x3f, 0x0e, 0x7e, 0x07, 0x67, 0xa9, 0xf7, 0x3b, 0x6d, 0xce, 0xef, 0x1e, 0x25,
	0xe0, 0x9e, 0xe0, 0x99, 0x62, 0xa8, 0xed, 0x99, 0x22, 0x13, 0x38, 0x53, 0xec, 0xc3, 0xe9, 0x38,
	0x38, 0x8f, 0x04, 0x25, 0xc9, 0x52, 0xb1, 0x29, 0xc9, 0x81, 0x34, 0x5e, 0x9c, 0xf2, 0xef, 0xce,
	0xc6, 0x3f, 0x87, 0x79, 0xbf, 0xac, 0x87, 0xf1, 0xa8, 0x0d, 0x46, 0x27, 0xcf, 0x85, 0x74, 0x5f,
	0x80, 0x1c, 0x93, 0x49, 0x3a, 0x87, 0xdd, 0x05, 0x24, 0x43, 0xb8, 0x65, 0x56, 0xa5, 0xe4, 0x39,
	0xc8, 0xec, 0x9b, 0x55, 0x11, 0xaf, 0x59, 0x17, 0x75, 0xcb, 0xac, 0x72, 0x30, 0xfa, 0x16, 0x7f,
	0x1c, 0x86, 0x1c, 0xff, 0xe6, 0xfb, 0x56, 0xc6, 0x51, 0xf8, 0x27, 0x30, 0x7f, 0x64, 0x5a, 0x07,
	0x7b, 0x35, 0xf3, 0xa8, 0x42, 0xde, 0x93, 0xdd, 0x16, 0xab, 0x8a, 0x82, 0xcf, 0x09, 0x1f, 0x8a,
	0x13, 0x72, 0xe5, 0xa6, 0x5c, 0x58, 0xd2, 0xd0, 0x55, 0xc8, 0xee, 0x9b, 0xd5, 0x8a, 0xed, 0xa8,
	0x8e, 0x3c, 0x35, 0x78, 0x19, 0xfd, 0x92, 0x3e, 0x15, 0xdf, 0xf4, 0x7d, 0xb3, 0xca, 0x7e, 0xa2,
	0x52, 0xe0, 0xe4, 0x32, 0xcc, 0xbc, 0x79, 0x31, 0x74, 0x72, 0xf1, 0x76, 0xd1, 0xf1, 0xd4, 0x72,
	0x1d, 0x46, 0x29, 0xb8, 0xa1, 0xe5, 0x47, 0x52, 0x54, 0xd0, 0x91, 0x7d, 0xb3, 0x5a, 0xd2, 0xd0,
	0x2d, 0x18, 0x27, 0x0d, 0x8d, 0x7f, 0x1e, 0x47, 0x93, 0x77, 0x3d, 0x46, 0x1a, 0x1a, 0xfb, 0x36,
	0xde, 0x84, 0x31, 0x5a, 0xb1, 0xe9, 0x17, 0x24, 0xcd, 0x61, 0x62, 0xb4, 0x66, 0xea, 0xf4, 0x9b,
	0xb1, 0x0e, 0x59, 0xdb, 0xd0, 0x1b, 0xaa, 0xd3, 0xb2, 0x48, 0xaa, 0x83, 0x84, 0x27, 0xde, 0x6f,
	0x95, 0xdf, 0x81, 0x79, 0xd7, 0x9d, 0xcc, 0xf7, 0xbe, 0x12, 0xcc, 0x03, 0xa6, 0xb4, 0x0f, 0x18,
	0x97, 0x70, 0x49, 0x34, 0xe4, 0x23, 0xea, 0x57, 0xb0, 0xe8, 0xea, 0xdd, 0xe4, 0xde, 0xf1, 0xd5,
	0x00, 0xd7, 0xb9, 0xa2, 0x06, 0x48, 0xff, 0xc5, 0x69, 0xba, 0x09, 0x93, 0x5b, 0x66, 0xd5, 0xcb,
	0xb6, 0xf3, 0x30, 0xbc, 0x6f, 0x56, 0x65, 0x8e, 0xc5, 0xb0, 0x9d, 0xbd, 0xc6, 0x16, 0xac, 0xc8,
	0x4c, 0x79, 0x6d, 0x5a, 0x07, 0x4f, 0xfd, 0x9c, 0x94, 0x96, 0x3c, 0x07, 0x14, 0x65, 0xba, 0x48,
	0xa3, 0xb3, 0xae, 0xe2, 0xd7, 0x61, 0x4a, 0x73, 0x98, 0xd9, 0x08, 0xd5, 0xf1, 0xdf, 0x86, 0xe1,
	0x0c, 0xdf, 0x75, 0x64, 0x4d, 0xa7, 0x84, 0x5b, 0x67, 0x6c, 0xdf, 0x27, 0xbb, 0x4e, 0xca, 0x2c,
	0xcb, 0x0a, 0xf1, 0x92, 0x86, 0xee, 0xc3, 0x8c, 0x97, 0xa3, 0x3c, 0x60, 0xc3, 0xed, 0x03, 0x36,
	0xed, 0xca, 0xf2, 0x3c, 0x7b, 0x1d, 0xc8, 0xb3, 0x11, 0xe6, 0xd1, 0xdb, 0xa1, 0x3c, 0x6b, 0xb7,
	0x95, 0x8e, 0x59, 0xf7, 0x23, 0x27, 0xd0, 0x23, 0x98, 0x72, 0x03, 0xb9, 0x6f, 0x9b, 0x8d, 0x54,
	0x49, 0x34, 0x29, 0x97, 0x6c, 0xd9, 0x66, 0x23, 0x98, 0x83, 0xd9, 0x1f, 0x35, 0x07, 0x1b, 0xb0,
	0x14, 0xa1, 0xa8, 0xc7, 0xf7, 0x17, 0x70, 0x22, 0x4a, 0x52, 0x49, 0xff, 0x44, 0x96, 0xa2, 0x08,
	0x4b, 0x6d, 0xbc, 0x03, 0xe7, 0xdb, 0x84, 0xb6, 0xbf, 0x4c, 0xd5, 0xe0, 0x5c, 0x1b, 0xbd, 0x83,
	0xac, 0x2c, 0xbe, 0x2b, 0xfe, 0x0b, 0x9e, 0x06, 0xbe, 0x2b, 0xbe, 0x48, 0x8c, 0xc8, 0x15, 0x5f,
	0x48, 0x8a, 0x2b, 0xbe, 0x90, 0xc2, 0x3f, 0x64, 0xe4, 0x6d, 0x3a, 0xa4, 0xa9, 0xd7, 0xdb, 0x74,
	0x50, 0x4d, 0xc7, 0x0c, 0x79, 0x08, 0x93, 0x32, 0xe9, 0xdd, 0xdb, 0x74, 0xe2, 0x2d, 0x48, 0xac,
	0x60, 0xb7, 0xa0, 0x02, 0x64, 0x68, 0x9a, 0x0c, 0xa7, 0x58, 0x47, 0x05, 0xd1, 0x55, 0x18, 0x6e,
	0xd9, 0xc4, 0x4a, 0xf5, 0x19, 0x64, 0x92, 0xe8, 0x0e, 0x8c, 0x37, 0x55, 0xdb, 0x3e, 0x32, 0x2d,
	0x2d, 0xdd, 0xc5, 0x5a, 0x4a, 0xf7, 0x9b, 0x10, 0x9b, 0x90, 0x13, 0x9e, 0x0c, 0x34, 0x4b, 0xc4,
	0xee, 0xa3, 0xcd, 0x92, 0x40, 0x74, 0x5d, 0x31, 0xbc, 0xed, 0x75, 0x70, 0x1e, 0x59, 0x8e, 0xb1,
	0xa7, 0x7a, 0x01, 0x5e, 0x83, 0x71, 0x55, 0x3c, 0x12, 0x5c, 0xf1, 0x1a, 0x0d, 0x52, 0x56, 0xa8,
	0x93, 0x72, 0xf8, 0xdf, 0x19, 0xf9, 0xad, 0x0c, 0x6b, 0x8b, 0xa3, 0xcb, 0xf3, 0x18, 0xba, 0x14,
	0x42, 0x74, 0x09, 0xe9, 0xe9, 0xc8, 0x97, 0x50, 0xaf, 0x22, 0xd3, 0x4f, 0xaf, 0x62, 0xb8, 0x8f,
	0x5e, 0xc5, 0x48, 0x5f, 0xbd, 0x8a, 0xd1, 0x3e, 0x7b, 0x15, 0x63, 0x5d, 0xf5, 0x2a, 0xfa, 0xe5,
	0x61, 0x09, 0x66, 0x65, 0x88, 0x3c, 0x22, 0xde, 0x80, 0xac, 0xa4, 0x84, 0x64, 0x62, 0x3b, 0xee,
	0x78, 0x82, 0x6b, 0xff, 0xba, 0x0f, 0x33, 0xdb, 0xa2, 0xe3, 0xfb, 0x92, 0x0b, 0x23, 0x03, 0xa6,
	0x75, 0xe2, 0x88, 0xb6, 0xd9, 0xc6, 0x71, 0x49, 0x43, 0xc8, 0x55, 0xe4, 0x76, 0x6b, 0x97, 0xbc,
	0x13, 0x8e, 0xec, 0x9c, 0xe2, 0xab, 0xdf, 0xfe, 0xfd, 0x1f, 0x1f, 0x87, 0x2e, 0xe1, 0xf3, 0x45,
	0xd5, 0xa0, 0x75, 0xb6, 0xe8, 0xf5, 0x92, 0x1d, 0xd3, 0x22, 0x45, 0xd1, 0x2e, 0x2c, 0xea, 0xc4,
	0x29, 0x1a, 0xda, 0xba, 0x72, 0x09, 0x99, 0x90, 0xf3, 0x43, 0xb1, 0x3e, 0xcc, 0x9c, 0xab, 0xd8,
	0x77, 0xeb, 0x88, 0x83, 0x5b, 0x63, 0x70, 0x97, 0xf1, 0x67, 0x29, 0xe0, 0x28, 0xf7, 0x29, 0xe0,
	0x1e, 0x4c, 0xd4, 0x0c, 0x5b, 0x22, 0xfa, 0xb0, 0x7c, 0x6d, 0xe4, 0x38, 0xac, 0x02, 0xc3, 0x5a,
	0xc5, 0xe7, 0x12, 0xb0, 0xa8, 0x72, 0x8a, 0xd3, 0x82, 0x19, 0x2b, 0xd8, 0xa5, 0x45, 0x67, 0x7d,
	0x5a, 0xe3, 0x5a, 0xc1, 0xfd, 0xc0, 0xda, 0xea, 0x21, 0xdb, 0xde, 0xef, 0x14, 0x58, 0x0a, 0xe1,
	0xbe, 0x36, 0x9c, 0xb7, 0x8f, 0x79, 0xff, 0xa5, 0x27, 0x13, 0xee, 0x31, 0x13, 0x6e, 0xe2, 0xab,
	0x29, 0x4c, 0xa8, 0x1c, 0x19, 0xce, 0xdb, 0x8a, 0xe8, 0xf6, 0x50, 0x7b, 0xde, 0x43, 0x2e, 0x64,
	0x8e, 0x8d, 0x56, 0xda, 0x19, 0x61, 0x77, 0xb0, 0xa2, 0xc8, 0xac, 0xb8, 0x88, 0x3f, 0xed, 0x6c,
	0x85, 0xed, 0x7a, 0xc2, 0x86, 0xa9, 0x96, 0xbf, 0x93, 0x8c, 0x4e, 0x77, 0xec, 0x30, 0xf7, 0x43,
	0x67, 0x8e, 0xc3, 0xe9, 0x3c, 0xab, 0x91, 0x1a, 0x71, 0x95, 0x77, 0x93, 0x3c, 0xd7, 0x19, 0xda,
	0x15, 0xbc, 0x9a, 0x80, 0xc6, 0x01, 0x44, 0xfe, 0xb4, 0xe0, 0x44, 0x08, 0xb0, 0xbb, 0x14, 0xba,
	0xc9, 0x40, 0x8b, 0xf8, 0x52, 0x3a, 0x50, 0x99, 0x45, 0x87, 0x30, 0xa7, 0x13, 0x27, 0xd0, 0xa5,
	0xea, 0x66, 0xab, 0xb7, 0x19, 0xea, 0x35, 0x7c, 0xb9, 0x0d, 0x6a, 0xb0, 0x3d, 0xe6, 0x2b, 0x17,
	0xdf, 0xc0, 0x42, 0x14, 0xb7, 0xbb, 0x1d, 0xdf, 0x65, 0xd8, 0xd7, 0x71, 0x21, 0x3d, 0xb6, 0xdc,
	0xb5, 0x0d, 0xb3, 0x35, 0xd9, 0x47, 0x92, 0xf0, 0xe9, 0x2b, 0x48, 0x92, 0xab, 0x43, 0xc0, 0xb2,
	0x90, 0x7c, 0xaf, 0xc0, 0xbc, 0x15, 0xd7, 0xef, 0x44, 0xe7, 0x23, 0x79, 0x14, 0xd7, 0x0f, 0x1d,
	0x80, 0x29, 0x32, 0xa5, 0xbe, 0x81, 0x45, 0xce, 0x83, 0x9e, 0x03, 0xbf, 0xce, 0x80, 0x6f, 0xe0,
	0x62, 0x3a, 0xe0, 0x00, 0xd5, 0xbf, 0x55, 0xe0, 0x64, 0x2c, 0x7c, 0x77, 0xf1, 0xbf, 0xcf, 0x4c,
	0xb8, 0x85, 0xaf, 0x75, 0x65, 0x82, 0xa4, 0x00, 0x81, 0x49, 0x49, 0xc0, 0x6e, 0xf6, 0x9d, 0x54,
	0xc6, 0x19, 0xa8, 0x8f, 0xe7, 0x07, 0xec, 0x0b, 0x2c, 0x60, 0xba, 0xdb, 0x5f, 0x52, 0xd1, 0xf2,
	0xa0, 0xe4, 0x9e, 0x4c, 0x98, 0x0a, 0x10, 0xcc, 0x57, 0x29, 0xe3, 0x9a, 0xe0, 0x71, 0xa0, 0x97,
	0x19, 0xe8, 0x05, 0xfc, 0x49, 0x47, 0x50, 0xc9, 0xa3, 0x03, 0x98, 0xf1, 0x05, 0xb2, 0x1b, 0x3f,
	0x5e, 0x63, 0x38, 0x9f, 0xe3, 0x0b, 0x1d, 0x71, 0x02, 0xb4, 0x79, 0x27, 0x4b, 0x72, 0x4f, 0xde,
	0x4c, 0x2a, 0xca, 0x01, 0x40, 0xe9, 0xd0, 0x3f, 0x2a, 0xb0, 0x22, 0xc3, 0x17, 0x6a, 0xe0, 0x6e,
	0x1c, 0xcb, 0x41, 0xca, 0x4a, 0x6c, 0x13, 0x36, 0xc1, 0x9c, 0xc7, 0xcc, 0x9c, 0x07, 0xf8, 0x4e,
	0x27, 0x73, 0x76, 0x42, 0xfd, 0x79, 0x16, 0x6c, 0xd1, 0x02, 0xa6, 0xe6, 0xfd, 0xa0, 0x40, 0xbe,
	0xd6, 0xa6, 0x1f, 0x8e, 0x56, 0x03, 0xe5, 0xac, 0x43, 0xcb, 0xbc, 0xe7, 0xdc, 0x8a, 0x98, 0x27,
	0x2b, 0xdd, 0x9f, 0x14, 0x38, 0x65, 0x75, 0x18, 0x44, 0xa0, 0xcb, 0xf1, 0xbc, 0xfc, 0x6f, 0xdb,
	0x27, 0x69, 0xfb, 0x17, 0x05, 0xce, 0xf9, 0xa8, 0x34, 0xd8, 0xc8, 0x3e, 0x65, 0xa6, 0x7d, 0x81,
	0xef, 0x75, 0x65, 0x9a, 0x20, 0x9e, 0x2f, 0xb8, 0xbf, 0x55, 0x20, 0x1f, 0xe2, 0x5e, 0x9f, 0x96,
	0xa5, 0xaa, 0xd9, 0x42, 0x55, 0x98, 0x6a, 0xbf, 0x56, 0x60, 0x2e, 0x2e, 0xa4, 0xe8, 0xd3, 0x84,
	0x50, 0xf6, 0x97, 0x90, 0xd2, 0x1a, 0x19, 0xb9, 0x3f, 0x28, 0xb0, 0x1c, 0x8d, 0x5c, 0x9f, 0x7e,
	0x79, 0xc0, 0x2c, 0xb9, 0x8d, 0xd7, 0xd2, 0x58, 0x12, 0x1b, 0xa8, 0x45, 0x9d, 0x38, 0x4f, 0x48,
	0xb3, 0x66, 0x1e, 0x13, 0x2d, 0xe0, 0x9d, 0x93, 0x41, 0x7b, 0x12, 0x0c, 0xd9, 0x60, 0x86, 0xdc,
	0xc7, 0xb7, 0x53, 0x06, 0x88, 0xff, 0x63, 0x4f, 0xc3, 0x9d, 0x03, 0x53, 0x6b, 0xfe, 0xac, 0xc0,
	0x19, 0x9d, 0x38, 0xcf, 0x54, 0x87, 0xd8, 0xce, 0x8e, 0x5a, 0x33, 0xe8, 0x89, 0xb6, 0x1f, 0xa3,
	0x7e, 0xca, 0x8c, 0xfa, 0x7f, 0xfc, 0x34, 0xad, 0x51, 0x35, 0x06, 0x5d, 0x39, 0x94, 0xd8, 0x95,
	0xc0, 0xe8, 0x2a, 0x62, 0xe3, 0x97, 0xa4, 0x41, 0xac, 0xff, 0x91, 0x8d, 0xba, 0xc4, 0x8e, 0xda,
	0xf8, 0x0b, 0x96, 0x7d, 0x91, 0xae, 0xe9, 0x20, 0xcf, 0x48, 0x91, 0xc6, 0xa9, 0xef, 0xdc, 0xf0,
	0x9d, 0x02, 0x4b, 0xf1, 0xf8, 0x83, 0x3d, 0x24, 0xc5, 0xdb, 0x20, 0xbf, 0x7f, 0x1f, 0x60, 0x9e,
	0xd6, 0xf4, 0x88, 0x15, 0xe9, 0xcf, 0xca, 0x77, 0x18, 0xfe, 0x1a, 0xbe, 0x92, 0x1a, 0x5f, 0x7e,
	0x44, 0x3e, 0x2a, 0x70, 0xd2, 0x6a, 0x37, 0x5f, 0x41, 0x17, 0x23, 0x65, 0xa7, 0xdd, 0x0c, 0x66,
	0x30, 0x56, 0xf9, 0x0a, 0xd0, 0x62, 0x2b, 0xbe, 0x05, 0x8d, 0x3e, 0x4b, 0x39, 0xd7, 0x18, 0x0c,
	0x57, 0xbc, 0xbb, 0xea, 0x77, 0x6e, 0x51, 0x8c, 0x20, 0x76, 0x43, 0xd7, 0xa4, 0x32, 0x18, 0x35,
	0x21, 0x70, 0x3c, 0xfb, 0x8d, 0x02, 0xa7, 0xdb, 0x5a, 0xd1, 0x1d, 0x69, 0x1f, 0x32, 0x4b, 0xee,
	0xe2, 0x1b, 0xdd, 0x5a, 0x22, 0x79, 0xfb, 0x57, 0x05, 0xce, 0xb4, 0x3a, 0x0e, 0x20, 0x50, 0x21,
	0x29, 0x58, 0xc1, 0x49, 0x45, 0x2f, 0x67, 0xb8, 0x76, 0x31, 0x2b, 0xca, 0x91, 0x87, 0xa8, 0x85,
	0xa7, 0x5a, 0x1d, 0x66, 0x1a, 0xbe, 0xb3, 0x52, 0x8a, 0xd1, 0x47, 0x9c, 0x99, 0x5f, 0x30, 0x33,
	0xd7, 0xf1, 0xcd, 0x6e, 0xcd, 0x64, 0x13, 0x12, 0x6a, 0xa3, 0x0a, 0xa0, 0x13, 0x67, 0xcb, 0xac,
	0x76, 0x43, 0xa7, 0xa4, 0x9b, 0xc4, 0xbe, 0x59, 0xf5, 0xd5, 0x3b, 0x9d, 0x5d, 0xc7, 0x18, 0x44,
	0x77, 0x5c, 0x49, 0xba, 0x90, 0x49, 0x18, 0x49, 0x8d, 0x37, 0x30, 0x46, 0x2b, 0xcc, 0x96, 0x59,
	0x4d, 0x5f, 0xc4, 0x2e, 0x31, 0x8c, 0x4f, 0xf1, 0xd9, 0x0e, 0x18, 0xb2, 0x6c, 0x19, 0x30, 0x61,
	0x79, 0xff, 0x3f, 0x81, 0x96, 0x23, 0x75, 0xca, 0xfb, 0xaf, 0x82, 0x5e, 0xa1, 0x64, 0x2d, 0xd2,
	0x21, 0xdb, 0x92, 0x13, 0x70, 0xdf, 0x07, 0x33, 0xfc, 0xcf, 0x0b, 0xbd, 0x06, 0xc7, 0x2b, 0x30,
	0x47, 0x30, 0xdd, 0x0a, 0x8c, 0xf0, 0xd1, 0x99, 0x28, 0x5a, 0x12, 0x0d, 0x93, 0x7a, 0xbc, 0x1e,
	0xa4, 0x47, 0xbc, 0x5f, 0x42, 0xae, 0x15, 0x9a, 0xf1, 0xfb, 0x8e, 0x78, 0x6d, 0xc6, 0xff, 0xbd,
	0xf4, 0x49, 0x7c, 0xe0, 0xfe, 0xe4, 0xd4, 0x61, 0x8a, 0x57, 0x96, 0x2e, 0xb9, 0x9f, 0xd4, 0xe3,
	0xa4, 0x70, 0x81, 0xe2, 0x59, 0x97, 0x17, 0xe9, 0x1e, 0x32, 0x20, 0xe9, 0x2a, 0xed, 0x03, 0x93,
	0x49, 0xc0, 0xe7, 0x02, 0x62, 0xa8, 0x35, 0xc8, 0xb9, 0x80, 0x98, 0x8c, 0x45, 0xe6, 0x02, 0x2e,
	0xd4, 0x60, 0xe7, 0x02, 0x7e, 0x38, 0xb9, 0x37, 0x5f, 0xbf, 0x5e, 0xa0, 0xc6, 0x34, 0xcb, 0x83,
	0x63, 0xd4, 0x5e, 0xea, 0x8a, 0x84, 0x8e, 0x74, 0xa9, 0x25, 0xe8, 0xe9, 0x8e, 0x93, 0xdb, 0x7e,
	0x9c, 0xeb, 0x25, 0xa6, 0x98, 0x81, 0x48, 0xc8, 0x81, 0xcd, 0x40, 0x24, 0x92, 0x2c, 0x6a, 0x6e,
	0x37, 0xbc, 0x07, 0xca, 0x24, 0xdd, 0xf3, 0x24, 0x56, 0x7c, 0x37, 0xbc, 0x47, 0xe2, 0x24, 0xe5,
	0x7b, 0x08, 0x54, 0x72, 0xe7, 0x00, 0x66, 0x74, 0xe2, 0xc8, 0x11, 0xdb, 0x20, 0xfb, 0x59, 0x72,
	0x4e, 0xe7, 0xcb, 0x8c, 0x77, 0x30, 0x1b, 0x00, 0x1b, 0x6c, 0x3f, 0x2b, 0x00, 0xe8, 0x75, 0xfb,
	0x45, 0x21, 0x97, 0xa8, 0x91, 0x42, 0x1e, 0x1a, 0x18, 0xf7, 0xb5, 0x55, 0x8f, 0xa7, 0xbe, 0xe1,
	0x91, 0x8b, 0x1c, 0x1d, 0x1e, 0xa5, 0xc0, 0x4e, 0x2a, 0xac, 0x2e, 0xb6, 0x4c, 0xcb, 0xb7, 0x30,
	0x49, 0x49, 0xec, 0xa2, 0xa6, 0x4e, 0x91, 0xd4, 0x48, 0x32, 0x47, 0xde, 0x01, 0xe2, 0x6c, 0xea,
	0x85, 0x3e, 0x37, 0x18, 0x5a, 0x01, 0x5f, 0x4c, 0x42, 0x0b, 0x64, 0xc9, 0x11, 0xcc, 0x85, 0x21,
	0xbb, 0x23, 0xd1, 0x2d, 0x06, 0x7b, 0x15, 0x7f, 0x9e, 0x12, 0x56, 0xf0, 0x68, 0x23, 0x0f, 0xb9,
	0x5d, 0xb3, 0x5e, 0xe0, 0x8b, 0xf8, 0x8c, 0xfc, 0x7b, 0x45, 0xf9, 0xbd, 0xa2, 0x54, 0x47, 0xd9,
	0x8f, 0xeb, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x0c, 0x07, 0x6a, 0x7d, 0x34, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetadataServiceClient is the client API for MetadataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadataServiceClient interface {
	//example api
	GetExampleById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetExampleByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	ListExample(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterExample(ctx context.Context, in *RegisterExampleRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterExampleWithCatalog(ctx context.Context, in *RegisterExampleRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterExamples(ctx context.Context, in *RegisterExamplesRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateExample(ctx context.Context, in *UpdateExampleRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteExampleById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteExampleByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	//model relation api
	GetModelRelationById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetModelRelationByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	ListModelRelation(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterModelRelation(ctx context.Context, in *RegisterModelRelationRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelRelationById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelRelationByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	//model api
	GetModelById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetModelByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterModel(ctx context.Context, in *RegisterModelRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	//model version relation api
	GetModelVersionRelationByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error)
	ListModelVersionRelation(ctx context.Context, in *ListModelVersionRelationRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterModelVersionRelation(ctx context.Context, in *RegisterModelVersionRelationRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelVersionRelationByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error)
	//model version api
	GetModelVersionByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterModelVersion(ctx context.Context, in *RegisterModelVersionRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteModelVersionByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error)
	GetDeployedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error)
	GetLatestValidatedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error)
	GetLatestGeneratedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error)
	//workflow execution api
	GetWorkFlowExecutionById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetWorkFlowExecutionByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	ListWorkFlowExecution(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterWorkFlowExecution(ctx context.Context, in *RegisterWorkFlowExecutionRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateWorkflowExecution(ctx context.Context, in *UpdateWorkflowExecutionRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteWorkflowExecutionById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteWorkflowExecutionByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateWorkflowExecutionEndTime(ctx context.Context, in *UpdateWorkflowExecutionEndTimeRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateWorkflowExecutionState(ctx context.Context, in *UpdateWorkflowExecutionStateRequest, opts ...grpc.CallOption) (*Response, error)
	//job api
	GetJobById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetJobByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	ListJob(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterJob(ctx context.Context, in *RegisterJobRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateJob(ctx context.Context, in *UpdateJobRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateJobState(ctx context.Context, in *UpdateJobStateRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateJobEndTime(ctx context.Context, in *UpdateJobEndTimeRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteJobById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteJobByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	//project api
	GetProjectById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetProjectByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterProject(ctx context.Context, in *RegisterProjectRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*Response, error)
	ListProject(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteProjectById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteProjectByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	//artifact api
	GetArtifactById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	GetArtifactByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*Response, error)
	RegisterArtifact(ctx context.Context, in *RegisterArtifactRequest, opts ...grpc.CallOption) (*Response, error)
	ListArtifact(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteArtifactById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteArtifactByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error)
}

type metadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetadataServiceClient(cc *grpc.ClientConn) MetadataServiceClient {
	return &metadataServiceClient{cc}
}

func (c *metadataServiceClient) GetExampleById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getExampleById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetExampleByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getExampleByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListExample(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listExample", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterExample(ctx context.Context, in *RegisterExampleRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerExample", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterExampleWithCatalog(ctx context.Context, in *RegisterExampleRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerExampleWithCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterExamples(ctx context.Context, in *RegisterExamplesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerExamples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateExample(ctx context.Context, in *UpdateExampleRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateExample", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteExampleById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteExampleById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteExampleByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteExampleByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelRelationById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelRelationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelRelationByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelRelationByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListModelRelation(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listModelRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterModelRelation(ctx context.Context, in *RegisterModelRelationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerModelRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelRelationById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelRelationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelRelationByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelRelationByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterModel(ctx context.Context, in *RegisterModelRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelVersionRelationByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelVersionRelationByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListModelVersionRelation(ctx context.Context, in *ListModelVersionRelationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listModelVersionRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterModelVersionRelation(ctx context.Context, in *RegisterModelVersionRelationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerModelVersionRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelVersionRelationByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelVersionRelationByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetModelVersionByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getModelVersionByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterModelVersion(ctx context.Context, in *RegisterModelVersionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteModelVersionByVersion(ctx context.Context, in *ModelVersionNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteModelVersionByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetDeployedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getDeployedModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetLatestValidatedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getLatestValidatedModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetLatestGeneratedModelVersion(ctx context.Context, in *ModelNameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getLatestGeneratedModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetWorkFlowExecutionById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getWorkFlowExecutionById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetWorkFlowExecutionByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getWorkFlowExecutionByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListWorkFlowExecution(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listWorkFlowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterWorkFlowExecution(ctx context.Context, in *RegisterWorkFlowExecutionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerWorkFlowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateWorkflowExecution(ctx context.Context, in *UpdateWorkflowExecutionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteWorkflowExecutionById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteWorkflowExecutionById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteWorkflowExecutionByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteWorkflowExecutionByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateWorkflowExecutionEndTime(ctx context.Context, in *UpdateWorkflowExecutionEndTimeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateWorkflowExecutionEndTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateWorkflowExecutionState(ctx context.Context, in *UpdateWorkflowExecutionStateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateWorkflowExecutionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetJobById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getJobById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetJobByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getJobByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListJob(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterJob(ctx context.Context, in *RegisterJobRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateJob(ctx context.Context, in *UpdateJobRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateJobState(ctx context.Context, in *UpdateJobStateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateJobState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateJobEndTime(ctx context.Context, in *UpdateJobEndTimeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateJobEndTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteJobById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteJobById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteJobByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteJobByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetProjectById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getProjectById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetProjectByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getProjectByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterProject(ctx context.Context, in *RegisterProjectRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListProject(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteProjectById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteProjectById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteProjectByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteProjectByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetArtifactById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getArtifactById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetArtifactByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/getArtifactByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/updateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RegisterArtifact(ctx context.Context, in *RegisterArtifactRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/registerArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListArtifact(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/listArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteArtifactById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteArtifactById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) DeleteArtifactByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/service.MetadataService/deleteArtifactByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadataServiceServer is the server API for MetadataService service.
type MetadataServiceServer interface {
	//example api
	GetExampleById(context.Context, *IdRequest) (*Response, error)
	GetExampleByName(context.Context, *NameRequest) (*Response, error)
	ListExample(context.Context, *ListRequest) (*Response, error)
	RegisterExample(context.Context, *RegisterExampleRequest) (*Response, error)
	RegisterExampleWithCatalog(context.Context, *RegisterExampleRequest) (*Response, error)
	RegisterExamples(context.Context, *RegisterExamplesRequest) (*Response, error)
	UpdateExample(context.Context, *UpdateExampleRequest) (*Response, error)
	DeleteExampleById(context.Context, *IdRequest) (*Response, error)
	DeleteExampleByName(context.Context, *NameRequest) (*Response, error)
	//model relation api
	GetModelRelationById(context.Context, *IdRequest) (*Response, error)
	GetModelRelationByName(context.Context, *NameRequest) (*Response, error)
	ListModelRelation(context.Context, *ListRequest) (*Response, error)
	RegisterModelRelation(context.Context, *RegisterModelRelationRequest) (*Response, error)
	DeleteModelRelationById(context.Context, *IdRequest) (*Response, error)
	DeleteModelRelationByName(context.Context, *NameRequest) (*Response, error)
	//model api
	GetModelById(context.Context, *IdRequest) (*Response, error)
	GetModelByName(context.Context, *NameRequest) (*Response, error)
	RegisterModel(context.Context, *RegisterModelRequest) (*Response, error)
	DeleteModelById(context.Context, *IdRequest) (*Response, error)
	DeleteModelByName(context.Context, *NameRequest) (*Response, error)
	//model version relation api
	GetModelVersionRelationByVersion(context.Context, *ModelVersionNameRequest) (*Response, error)
	ListModelVersionRelation(context.Context, *ListModelVersionRelationRequest) (*Response, error)
	RegisterModelVersionRelation(context.Context, *RegisterModelVersionRelationRequest) (*Response, error)
	DeleteModelVersionRelationByVersion(context.Context, *ModelVersionNameRequest) (*Response, error)
	//model version api
	GetModelVersionByVersion(context.Context, *ModelVersionNameRequest) (*Response, error)
	RegisterModelVersion(context.Context, *RegisterModelVersionRequest) (*Response, error)
	DeleteModelVersionByVersion(context.Context, *ModelVersionNameRequest) (*Response, error)
	GetDeployedModelVersion(context.Context, *ModelNameRequest) (*Response, error)
	GetLatestValidatedModelVersion(context.Context, *ModelNameRequest) (*Response, error)
	GetLatestGeneratedModelVersion(context.Context, *ModelNameRequest) (*Response, error)
	//workflow execution api
	GetWorkFlowExecutionById(context.Context, *IdRequest) (*Response, error)
	GetWorkFlowExecutionByName(context.Context, *NameRequest) (*Response, error)
	ListWorkFlowExecution(context.Context, *ListRequest) (*Response, error)
	RegisterWorkFlowExecution(context.Context, *RegisterWorkFlowExecutionRequest) (*Response, error)
	UpdateWorkflowExecution(context.Context, *UpdateWorkflowExecutionRequest) (*Response, error)
	DeleteWorkflowExecutionById(context.Context, *IdRequest) (*Response, error)
	DeleteWorkflowExecutionByName(context.Context, *NameRequest) (*Response, error)
	UpdateWorkflowExecutionEndTime(context.Context, *UpdateWorkflowExecutionEndTimeRequest) (*Response, error)
	UpdateWorkflowExecutionState(context.Context, *UpdateWorkflowExecutionStateRequest) (*Response, error)
	//job api
	GetJobById(context.Context, *IdRequest) (*Response, error)
	GetJobByName(context.Context, *NameRequest) (*Response, error)
	ListJob(context.Context, *ListRequest) (*Response, error)
	RegisterJob(context.Context, *RegisterJobRequest) (*Response, error)
	UpdateJob(context.Context, *UpdateJobRequest) (*Response, error)
	UpdateJobState(context.Context, *UpdateJobStateRequest) (*Response, error)
	UpdateJobEndTime(context.Context, *UpdateJobEndTimeRequest) (*Response, error)
	DeleteJobById(context.Context, *IdRequest) (*Response, error)
	DeleteJobByName(context.Context, *NameRequest) (*Response, error)
	//project api
	GetProjectById(context.Context, *IdRequest) (*Response, error)
	GetProjectByName(context.Context, *NameRequest) (*Response, error)
	RegisterProject(context.Context, *RegisterProjectRequest) (*Response, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*Response, error)
	ListProject(context.Context, *ListRequest) (*Response, error)
	DeleteProjectById(context.Context, *IdRequest) (*Response, error)
	DeleteProjectByName(context.Context, *NameRequest) (*Response, error)
	//artifact api
	GetArtifactById(context.Context, *IdRequest) (*Response, error)
	GetArtifactByName(context.Context, *NameRequest) (*Response, error)
	UpdateArtifact(context.Context, *UpdateArtifactRequest) (*Response, error)
	RegisterArtifact(context.Context, *RegisterArtifactRequest) (*Response, error)
	ListArtifact(context.Context, *ListRequest) (*Response, error)
	DeleteArtifactById(context.Context, *IdRequest) (*Response, error)
	DeleteArtifactByName(context.Context, *NameRequest) (*Response, error)
}

// UnimplementedMetadataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetadataServiceServer struct {
}

func (*UnimplementedMetadataServiceServer) GetExampleById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExampleById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetExampleByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExampleByName not implemented")
}
func (*UnimplementedMetadataServiceServer) ListExample(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExample not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterExample(ctx context.Context, req *RegisterExampleRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterExample not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterExampleWithCatalog(ctx context.Context, req *RegisterExampleRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterExampleWithCatalog not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterExamples(ctx context.Context, req *RegisterExamplesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterExamples not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateExample(ctx context.Context, req *UpdateExampleRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExample not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteExampleById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExampleById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteExampleByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExampleByName not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelRelationById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelRelationById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelRelationByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelRelationByName not implemented")
}
func (*UnimplementedMetadataServiceServer) ListModelRelation(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelRelation not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterModelRelation(ctx context.Context, req *RegisterModelRelationRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterModelRelation not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelRelationById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelRelationById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelRelationByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelRelationByName not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelByName not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterModel(ctx context.Context, req *RegisterModelRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterModel not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelByName not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelVersionRelationByVersion(ctx context.Context, req *ModelVersionNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelVersionRelationByVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) ListModelVersionRelation(ctx context.Context, req *ListModelVersionRelationRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelVersionRelation not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterModelVersionRelation(ctx context.Context, req *RegisterModelVersionRelationRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterModelVersionRelation not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelVersionRelationByVersion(ctx context.Context, req *ModelVersionNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelVersionRelationByVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) GetModelVersionByVersion(ctx context.Context, req *ModelVersionNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelVersionByVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterModelVersion(ctx context.Context, req *RegisterModelVersionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterModelVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteModelVersionByVersion(ctx context.Context, req *ModelVersionNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelVersionByVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) GetDeployedModelVersion(ctx context.Context, req *ModelNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeployedModelVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) GetLatestValidatedModelVersion(ctx context.Context, req *ModelNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestValidatedModelVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) GetLatestGeneratedModelVersion(ctx context.Context, req *ModelNameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestGeneratedModelVersion not implemented")
}
func (*UnimplementedMetadataServiceServer) GetWorkFlowExecutionById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkFlowExecutionById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetWorkFlowExecutionByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkFlowExecutionByName not implemented")
}
func (*UnimplementedMetadataServiceServer) ListWorkFlowExecution(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkFlowExecution not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterWorkFlowExecution(ctx context.Context, req *RegisterWorkFlowExecutionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterWorkFlowExecution not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateWorkflowExecution(ctx context.Context, req *UpdateWorkflowExecutionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowExecution not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteWorkflowExecutionById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkflowExecutionById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteWorkflowExecutionByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkflowExecutionByName not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateWorkflowExecutionEndTime(ctx context.Context, req *UpdateWorkflowExecutionEndTimeRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowExecutionEndTime not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateWorkflowExecutionState(ctx context.Context, req *UpdateWorkflowExecutionStateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowExecutionState not implemented")
}
func (*UnimplementedMetadataServiceServer) GetJobById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetJobByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobByName not implemented")
}
func (*UnimplementedMetadataServiceServer) ListJob(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJob not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterJob(ctx context.Context, req *RegisterJobRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterJob not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateJob(ctx context.Context, req *UpdateJobRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJob not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateJobState(ctx context.Context, req *UpdateJobStateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobState not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateJobEndTime(ctx context.Context, req *UpdateJobEndTimeRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobEndTime not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteJobById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteJobByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobByName not implemented")
}
func (*UnimplementedMetadataServiceServer) GetProjectById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetProjectByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectByName not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterProject(ctx context.Context, req *RegisterProjectRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterProject not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedMetadataServiceServer) ListProject(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProject not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteProjectById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjectById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteProjectByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjectByName not implemented")
}
func (*UnimplementedMetadataServiceServer) GetArtifactById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifactById not implemented")
}
func (*UnimplementedMetadataServiceServer) GetArtifactByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifactByName not implemented")
}
func (*UnimplementedMetadataServiceServer) UpdateArtifact(ctx context.Context, req *UpdateArtifactRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArtifact not implemented")
}
func (*UnimplementedMetadataServiceServer) RegisterArtifact(ctx context.Context, req *RegisterArtifactRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterArtifact not implemented")
}
func (*UnimplementedMetadataServiceServer) ListArtifact(ctx context.Context, req *ListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifact not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteArtifactById(ctx context.Context, req *IdRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifactById not implemented")
}
func (*UnimplementedMetadataServiceServer) DeleteArtifactByName(ctx context.Context, req *NameRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifactByName not implemented")
}

func RegisterMetadataServiceServer(s *grpc.Server, srv MetadataServiceServer) {
	s.RegisterService(&_MetadataService_serviceDesc, srv)
}

func _MetadataService_GetExampleById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetExampleById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetExampleById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetExampleById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetExampleByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetExampleByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetExampleByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetExampleByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListExample_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListExample(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListExample",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListExample(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterExample_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterExample(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterExample",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterExample(ctx, req.(*RegisterExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterExampleWithCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterExampleWithCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterExampleWithCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterExampleWithCatalog(ctx, req.(*RegisterExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterExamples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterExamplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterExamples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterExamples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterExamples(ctx, req.(*RegisterExamplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateExample_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateExample(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateExample",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateExample(ctx, req.(*UpdateExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteExampleById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteExampleById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteExampleById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteExampleById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteExampleByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteExampleByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteExampleByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteExampleByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelRelationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelRelationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelRelationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelRelationById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelRelationByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelRelationByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelRelationByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelRelationByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListModelRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListModelRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListModelRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListModelRelation(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterModelRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterModelRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterModelRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterModelRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterModelRelation(ctx, req.(*RegisterModelRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelRelationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelRelationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelRelationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelRelationById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelRelationByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelRelationByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelRelationByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelRelationByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterModel(ctx, req.(*RegisterModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelVersionRelationByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelVersionNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelVersionRelationByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelVersionRelationByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelVersionRelationByVersion(ctx, req.(*ModelVersionNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListModelVersionRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelVersionRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListModelVersionRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListModelVersionRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListModelVersionRelation(ctx, req.(*ListModelVersionRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterModelVersionRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterModelVersionRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterModelVersionRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterModelVersionRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterModelVersionRelation(ctx, req.(*RegisterModelVersionRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelVersionRelationByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelVersionNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelVersionRelationByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelVersionRelationByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelVersionRelationByVersion(ctx, req.(*ModelVersionNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetModelVersionByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelVersionNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetModelVersionByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetModelVersionByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetModelVersionByVersion(ctx, req.(*ModelVersionNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterModelVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterModelVersion(ctx, req.(*RegisterModelVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteModelVersionByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelVersionNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteModelVersionByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteModelVersionByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteModelVersionByVersion(ctx, req.(*ModelVersionNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetDeployedModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetDeployedModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetDeployedModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetDeployedModelVersion(ctx, req.(*ModelNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetLatestValidatedModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetLatestValidatedModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetLatestValidatedModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetLatestValidatedModelVersion(ctx, req.(*ModelNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetLatestGeneratedModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetLatestGeneratedModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetLatestGeneratedModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetLatestGeneratedModelVersion(ctx, req.(*ModelNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetWorkFlowExecutionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetWorkFlowExecutionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetWorkFlowExecutionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetWorkFlowExecutionById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetWorkFlowExecutionByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetWorkFlowExecutionByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetWorkFlowExecutionByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetWorkFlowExecutionByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListWorkFlowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListWorkFlowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListWorkFlowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListWorkFlowExecution(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterWorkFlowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterWorkFlowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterWorkFlowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterWorkFlowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterWorkFlowExecution(ctx, req.(*RegisterWorkFlowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateWorkflowExecution(ctx, req.(*UpdateWorkflowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteWorkflowExecutionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteWorkflowExecutionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteWorkflowExecutionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteWorkflowExecutionById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteWorkflowExecutionByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteWorkflowExecutionByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteWorkflowExecutionByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteWorkflowExecutionByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateWorkflowExecutionEndTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowExecutionEndTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateWorkflowExecutionEndTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateWorkflowExecutionEndTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateWorkflowExecutionEndTime(ctx, req.(*UpdateWorkflowExecutionEndTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateWorkflowExecutionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowExecutionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateWorkflowExecutionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateWorkflowExecutionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateWorkflowExecutionState(ctx, req.(*UpdateWorkflowExecutionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetJobById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetJobById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetJobById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetJobById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetJobByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetJobByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetJobByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetJobByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListJob(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterJob(ctx, req.(*RegisterJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateJob(ctx, req.(*UpdateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateJobState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateJobState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateJobState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateJobState(ctx, req.(*UpdateJobStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateJobEndTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobEndTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateJobEndTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateJobEndTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateJobEndTime(ctx, req.(*UpdateJobEndTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteJobById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteJobById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteJobById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteJobById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteJobByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteJobByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteJobByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteJobByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetProjectById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetProjectById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetProjectById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetProjectById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetProjectByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetProjectByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetProjectByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetProjectByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterProject(ctx, req.(*RegisterProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListProject(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteProjectById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteProjectById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteProjectById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteProjectById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteProjectByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteProjectByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteProjectByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteProjectByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetArtifactById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetArtifactById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetArtifactById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetArtifactById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetArtifactByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetArtifactByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/GetArtifactByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetArtifactByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_UpdateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).UpdateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/UpdateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).UpdateArtifact(ctx, req.(*UpdateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RegisterArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RegisterArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/RegisterArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RegisterArtifact(ctx, req.(*RegisterArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/ListArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListArtifact(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteArtifactById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteArtifactById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteArtifactById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteArtifactById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_DeleteArtifactByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).DeleteArtifactByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MetadataService/DeleteArtifactByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).DeleteArtifactByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.MetadataService",
	HandlerType: (*MetadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getExampleById",
			Handler:    _MetadataService_GetExampleById_Handler,
		},
		{
			MethodName: "getExampleByName",
			Handler:    _MetadataService_GetExampleByName_Handler,
		},
		{
			MethodName: "listExample",
			Handler:    _MetadataService_ListExample_Handler,
		},
		{
			MethodName: "registerExample",
			Handler:    _MetadataService_RegisterExample_Handler,
		},
		{
			MethodName: "registerExampleWithCatalog",
			Handler:    _MetadataService_RegisterExampleWithCatalog_Handler,
		},
		{
			MethodName: "registerExamples",
			Handler:    _MetadataService_RegisterExamples_Handler,
		},
		{
			MethodName: "updateExample",
			Handler:    _MetadataService_UpdateExample_Handler,
		},
		{
			MethodName: "deleteExampleById",
			Handler:    _MetadataService_DeleteExampleById_Handler,
		},
		{
			MethodName: "deleteExampleByName",
			Handler:    _MetadataService_DeleteExampleByName_Handler,
		},
		{
			MethodName: "getModelRelationById",
			Handler:    _MetadataService_GetModelRelationById_Handler,
		},
		{
			MethodName: "getModelRelationByName",
			Handler:    _MetadataService_GetModelRelationByName_Handler,
		},
		{
			MethodName: "listModelRelation",
			Handler:    _MetadataService_ListModelRelation_Handler,
		},
		{
			MethodName: "registerModelRelation",
			Handler:    _MetadataService_RegisterModelRelation_Handler,
		},
		{
			MethodName: "deleteModelRelationById",
			Handler:    _MetadataService_DeleteModelRelationById_Handler,
		},
		{
			MethodName: "deleteModelRelationByName",
			Handler:    _MetadataService_DeleteModelRelationByName_Handler,
		},
		{
			MethodName: "getModelById",
			Handler:    _MetadataService_GetModelById_Handler,
		},
		{
			MethodName: "getModelByName",
			Handler:    _MetadataService_GetModelByName_Handler,
		},
		{
			MethodName: "registerModel",
			Handler:    _MetadataService_RegisterModel_Handler,
		},
		{
			MethodName: "deleteModelById",
			Handler:    _MetadataService_DeleteModelById_Handler,
		},
		{
			MethodName: "deleteModelByName",
			Handler:    _MetadataService_DeleteModelByName_Handler,
		},
		{
			MethodName: "getModelVersionRelationByVersion",
			Handler:    _MetadataService_GetModelVersionRelationByVersion_Handler,
		},
		{
			MethodName: "listModelVersionRelation",
			Handler:    _MetadataService_ListModelVersionRelation_Handler,
		},
		{
			MethodName: "registerModelVersionRelation",
			Handler:    _MetadataService_RegisterModelVersionRelation_Handler,
		},
		{
			MethodName: "deleteModelVersionRelationByVersion",
			Handler:    _MetadataService_DeleteModelVersionRelationByVersion_Handler,
		},
		{
			MethodName: "getModelVersionByVersion",
			Handler:    _MetadataService_GetModelVersionByVersion_Handler,
		},
		{
			MethodName: "registerModelVersion",
			Handler:    _MetadataService_RegisterModelVersion_Handler,
		},
		{
			MethodName: "deleteModelVersionByVersion",
			Handler:    _MetadataService_DeleteModelVersionByVersion_Handler,
		},
		{
			MethodName: "getDeployedModelVersion",
			Handler:    _MetadataService_GetDeployedModelVersion_Handler,
		},
		{
			MethodName: "getLatestValidatedModelVersion",
			Handler:    _MetadataService_GetLatestValidatedModelVersion_Handler,
		},
		{
			MethodName: "getLatestGeneratedModelVersion",
			Handler:    _MetadataService_GetLatestGeneratedModelVersion_Handler,
		},
		{
			MethodName: "getWorkFlowExecutionById",
			Handler:    _MetadataService_GetWorkFlowExecutionById_Handler,
		},
		{
			MethodName: "getWorkFlowExecutionByName",
			Handler:    _MetadataService_GetWorkFlowExecutionByName_Handler,
		},
		{
			MethodName: "listWorkFlowExecution",
			Handler:    _MetadataService_ListWorkFlowExecution_Handler,
		},
		{
			MethodName: "registerWorkFlowExecution",
			Handler:    _MetadataService_RegisterWorkFlowExecution_Handler,
		},
		{
			MethodName: "updateWorkflowExecution",
			Handler:    _MetadataService_UpdateWorkflowExecution_Handler,
		},
		{
			MethodName: "deleteWorkflowExecutionById",
			Handler:    _MetadataService_DeleteWorkflowExecutionById_Handler,
		},
		{
			MethodName: "deleteWorkflowExecutionByName",
			Handler:    _MetadataService_DeleteWorkflowExecutionByName_Handler,
		},
		{
			MethodName: "updateWorkflowExecutionEndTime",
			Handler:    _MetadataService_UpdateWorkflowExecutionEndTime_Handler,
		},
		{
			MethodName: "updateWorkflowExecutionState",
			Handler:    _MetadataService_UpdateWorkflowExecutionState_Handler,
		},
		{
			MethodName: "getJobById",
			Handler:    _MetadataService_GetJobById_Handler,
		},
		{
			MethodName: "getJobByName",
			Handler:    _MetadataService_GetJobByName_Handler,
		},
		{
			MethodName: "listJob",
			Handler:    _MetadataService_ListJob_Handler,
		},
		{
			MethodName: "registerJob",
			Handler:    _MetadataService_RegisterJob_Handler,
		},
		{
			MethodName: "updateJob",
			Handler:    _MetadataService_UpdateJob_Handler,
		},
		{
			MethodName: "updateJobState",
			Handler:    _MetadataService_UpdateJobState_Handler,
		},
		{
			MethodName: "updateJobEndTime",
			Handler:    _MetadataService_UpdateJobEndTime_Handler,
		},
		{
			MethodName: "deleteJobById",
			Handler:    _MetadataService_DeleteJobById_Handler,
		},
		{
			MethodName: "deleteJobByName",
			Handler:    _MetadataService_DeleteJobByName_Handler,
		},
		{
			MethodName: "getProjectById",
			Handler:    _MetadataService_GetProjectById_Handler,
		},
		{
			MethodName: "getProjectByName",
			Handler:    _MetadataService_GetProjectByName_Handler,
		},
		{
			MethodName: "registerProject",
			Handler:    _MetadataService_RegisterProject_Handler,
		},
		{
			MethodName: "updateProject",
			Handler:    _MetadataService_UpdateProject_Handler,
		},
		{
			MethodName: "listProject",
			Handler:    _MetadataService_ListProject_Handler,
		},
		{
			MethodName: "deleteProjectById",
			Handler:    _MetadataService_DeleteProjectById_Handler,
		},
		{
			MethodName: "deleteProjectByName",
			Handler:    _MetadataService_DeleteProjectByName_Handler,
		},
		{
			MethodName: "getArtifactById",
			Handler:    _MetadataService_GetArtifactById_Handler,
		},
		{
			MethodName: "getArtifactByName",
			Handler:    _MetadataService_GetArtifactByName_Handler,
		},
		{
			MethodName: "updateArtifact",
			Handler:    _MetadataService_UpdateArtifact_Handler,
		},
		{
			MethodName: "registerArtifact",
			Handler:    _MetadataService_RegisterArtifact_Handler,
		},
		{
			MethodName: "listArtifact",
			Handler:    _MetadataService_ListArtifact_Handler,
		},
		{
			MethodName: "deleteArtifactById",
			Handler:    _MetadataService_DeleteArtifactById_Handler,
		},
		{
			MethodName: "deleteArtifactByName",
			Handler:    _MetadataService_DeleteArtifactByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata_service.proto",
}
